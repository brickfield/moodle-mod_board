{"version":3,"file":"jquery.editable.amd.min.js","sources":["../src/jquery.editable.amd.js"],"sourcesContent":["import jQuery from 'jquery';\n/*\n* jQuery plugin that makes elements editable\n*\n* @author Victor Jonsson (http://victorjonsson.se/)\n* @website https://github.com/victorjonsson/jquery-editable/\n* @license GPLv2 http://www.gnu.org/licenses/gpl-2.0.html\n* @version 1.3.6.dev\n* @donations http://victorjonsson.se/donations/\n*/\nexport default (function($, window) {\n\n    'use strict';\n\n    if ($ === undefined) {\n        $ = jQuery;\n    }\n\n    var $win = $(window), // Reference to window\n\n    // Reference to textarea\n    $textArea = false,\n\n    // Reference to currently edit element\n    $currentlyEdited = false,\n\n    // Some constants\n    EVENT_ATTR = 'data-edit-event',\n    IS_EDITING_ATTR = 'data-is-editing',\n    EMPTY_ATTR = 'data-is-empty',\n    DBL_TAP_EVENT = 'dbltap',\n    SUPPORTS_TOUCH = 'ontouchend' in window,\n    TINYMCE_INSTALLED = 'tinyMCE' in window && typeof window.tinyMCE.init == 'function',\n\n    // reference to old is function\n    oldjQueryIs = $.fn.is,\n\n    /*\n     * Function responsible of triggering double tap event\n     */\n    lastTap = 0,\n    tapper = function() {\n        var now = new Date().getTime();\n        if( (now-lastTap) < 250 ) {\n            $(this).trigger(DBL_TAP_EVENT);\n        }\n        lastTap = now;\n    },\n\n    /**\n     * Event listener that largens font size\n     */\n    keyHandler = function(e) {\n        if( e.keyCode == 13 && e.data.closeOnEnter ) {\n            $currentlyEdited.editable('close');\n        }\n    else if( e.keyCode == 27 ) {\n            $textArea.val($currentlyEdited.attr('orig-text'));\n            $currentlyEdited.editable('close');\n        }\n        else if( e.data.toggleFontSize && (e.metaKey && (e.keyCode == 38 || e.keyCode == 40)) ) {\n            var fontSize = parseInt($textArea.css('font-size'), 10);\n            fontSize += e.keyCode == 40 ? -1 : 1;\n            $textArea.css('font-size', fontSize+'px');\n            return false;\n        }\n    },\n\n    /**\n     * Adjusts the height of the textarea to remove scroll\n     * @todo This way of doing it does not make the textarea smaller when the number of text lines gets smaller\n     */\n    adjustTextAreaHeight = function() {\n        if( $textArea[0].scrollHeight !== parseInt($textArea.attr('data-scroll'), 10) ) {\n            $textArea.css('height', $textArea[0].scrollHeight +'px');\n            $textArea.attr('data-scroll', $textArea[0].scrollHeight);\n        }\n    },\n\n    /**\n     * @param {jQuery} $el\n     * @param {String} newText\n     */\n    resetElement = function($el, newText, emptyMessage) {\n        $el.removeAttr(IS_EDITING_ATTR);\n\n        if (newText.length == 0 && emptyMessage) {\n            $el.html(emptyMessage);\n            $el.attr(EMPTY_ATTR, 'empty');\n        } else {\n            $el.html( newText );\n            $el.removeAttr(EMPTY_ATTR);\n        }\n        $textArea.remove();\n    },\n\n\n    /**\n     * Function creating editor\n     */\n    elementEditor = function($el, opts) {\n\n        if( $el.is(':editing') ) {\n            return;\n        }\n\n        $currentlyEdited = $el;\n        $el.attr(IS_EDITING_ATTR, '1');\n\n        if ($el.is(':empty')) {\n            $el.removeAttr(EMPTY_ATTR);\n            $el.html('');\n        }\n\n        var defaultText = $.trim( $el.html() ),\n            defaultFontSize = $el.css('font-size'),\n            elementHeight = $el.height(),\n            textareaStyle = 'width: 96%; padding:0; margin:0; border:0; background:none;'+\n                            'font-family: '+$el.css('font-family')+'; font-size: '+$el.css('font-size')+';'+\n                            'font-weight: '+$el.css('font-weight')+';';\n\n        $el.attr('orig-text', defaultText);\n        if( opts.lineBreaks ) {\n            defaultText = defaultText.replace(/<br( |)(|\\/)>/g, '\\n');\n        }\n\n        $textArea = $('<textarea></textarea>');\n        $el.text('');\n\n        // The editor should always be static\n        textareaStyle += 'position: static';\n\n        /*\n          TINYMCE EDITOR\n         */\n        if( opts.tinyMCE !== false ) {\n            var id = 'editable-area-'+(new Date().getTime());\n            $textArea\n                .val(defaultText)\n                .appendTo($el)\n                .attr('id', id);\n\n            if( typeof opts.tinyMCE != 'object' ) {\n                opts.tinyMCE = {};\n            }\n\n            opts.tinyMCE.mode = 'exact';\n            opts.tinyMCE.elements = id;\n            opts.tinyMCE.width = $el.innerWidth();\n            opts.tinyMCE.height = $el.height() + 200;\n            opts.tinyMCE.theme_advanced_resize_vertical = true;\n\n            opts.tinyMCE.setup = function (ed) {\n                ed.onInit.add(function(editor) {\n                    var editorWindow = editor.getWin();\n                    var hasPressedKey = false;\n                    var editorBlur = function() {\n\n                        var newText = $(editor.getDoc()).find('body').html();\n                        if( $(newText).get(0).nodeName == $el.get(0).nodeName ) {\n                            newText = $(newText).html();\n                        }\n\n                        // Update element and remove editor\n                        resetElement($el, newText, opts.emptyMessage);\n                        editor.remove();\n                        $textArea = false;\n                        $win.unbind('click', editorBlur);\n                        $currentlyEdited = false;\n\n                        // Run callback\n                        if( typeof opts.callback == 'function' ) {\n                            opts.callback({\n                                content : newText == defaultText || !hasPressedKey ? false : newText,\n                                fontSize : false,\n                                $el : $el\n                            });\n                        }\n                    };\n\n                    // Blur editor when user clicks outside the editor\n                    setTimeout(function() {\n                        $win.bind('click', editorBlur);\n                    }, 500);\n\n                    // Create a dummy textarea that will called upon when\n                    // programmatically interacting with the editor\n                    $textArea = $('<textarea></textarea>');\n                    $textArea.bind('blur', editorBlur);\n\n                    editorWindow.onkeydown = function() {\n                        hasPressedKey = true;\n                    };\n\n                    editorWindow.focus();\n                });\n            };\n\n            window.tinyMCE.init(opts.tinyMCE);\n        }\n\n        /*\n         TEXTAREA EDITOR\n         */\n        else {\n\n            if( opts.toggleFontSize || opts.closeOnEnter ) {\n                $win.bind('keydown', opts, keyHandler);\n            }\n            $win.bind('keyup', adjustTextAreaHeight);\n\n            $textArea\n                .html(defaultText)\n                .blur(function() {\n\n                    $currentlyEdited = false;\n\n                    // Get new text and font size\n                    var newText = $.trim( $textArea.val() ),\n                        newFontSize = $textArea.css('font-size');\n\n                    newText = $('<div />').text(newText).html();\n\n                    if( opts.lineBreaks ) {\n                        newText = newText.replace(new RegExp('\\\\n','g'), '<br />');\n                    }\n\n                    // Update element\n                    resetElement($el, newText, opts.emptyMessage);\n                    if( newFontSize != defaultFontSize ) {\n                        $el.css('font-size', newFontSize);\n                    }\n\n                    // remove textarea and size toggles\n                    $win.unbind('keydown', keyHandler);\n                    $win.unbind('keyup', adjustTextAreaHeight);\n\n                    // Run callback\n                    if( typeof opts.callback == 'function' ) {\n                        opts.callback({\n                            content : newText == defaultText ? false : newText,\n                            fontSize : newFontSize == defaultFontSize ? false : newFontSize,\n                            $el : $el\n                        });\n                    }\n                })\n                .attr('style', textareaStyle)\n                .appendTo($el)\n                .css({\n                    margin: 0,\n                    padding: 0,\n                    height : elementHeight +'px',\n                    overflow : 'hidden'\n                })\n                .css(opts.editorStyle)\n                .focus()\n                .get(0).select();\n\n            adjustTextAreaHeight();\n\n        }\n\n        $el.trigger('edit', [$textArea]);\n    },\n\n    /**\n     * Event listener\n     */\n    editEvent = function(event) {\n\n        if( $currentlyEdited !== false && !$currentlyEdited.children(\"textarea\").is(clickedElement)) {\n            // Not closing the currently open editor before opening a new\n            // editor makes things go crazy\n            $currentlyEdited.editable('close');\n            elementEditor($(this), event.data);\n        }\n        else {\n            elementEditor($(this), event.data);\n        }\n        return false;\n    };\n\n    /**\n     * Jquery plugin that makes elments editable\n     * @param {Object|String} [opts] Either callback function or the string 'destroy' if wanting to remove the editor event\n     * @return {jQuery|Boolean}\n     */\n    $.fn.editable = function(opts) {\n\n        if(typeof opts == 'string') {\n\n            if( this.is(':editable') ) {\n\n                switch (opts) {\n                    case 'open':\n                        if( !this.is(':editing') ) {\n                            this.trigger(this.attr(EVENT_ATTR));\n                        }\n                        break;\n                    case 'close':\n                        if( this.is(':editing') ) {\n                            $textArea.trigger('blur');\n                        }\n                        break;\n                    case 'destroy':\n                        if( this.is(':editing') ) {\n                            $textArea.trigger('blur');\n                        }\n                        this.unbind(this.attr(EVENT_ATTR));\n                        this.removeAttr(EVENT_ATTR);\n                        break;\n                    default:\n//                        console.warn('Unknown command \"'+opts+'\" for jquery.editable');\n                }\n\n            } else {\n//                console.error('Calling .editable() on an element that is not editable, call .editable() first');\n            }\n        }\n        else {\n\n            if( this.is(':editable') ) {\n//                console.warn('Making an already editable element editable, call .editable(\"destroy\") first');\n                this.editable('destroy');\n            }\n\n            opts = $.extend({\n                event : 'dblclick',\n                touch : true,\n                lineBreaks : true,\n                toggleFontSize : true,\n                closeOnEnter : false,\n                emptyMessage : false,\n                tinyMCE : false,\n                editorStyle : {}\n            }, opts);\n\n            if( opts.tinyMCE !== false && !TINYMCE_INSTALLED ) {\n//                console.warn('Trying to use tinyMCE as editor but id does not seem to be installed');\n                opts.tinyMCE = false;\n            }\n\n            if( SUPPORTS_TOUCH && opts.touch ) {\n                opts.event = DBL_TAP_EVENT;\n                this.unbind('touchend', tapper);\n                this.bind('touchend', tapper);\n            }\n            else {\n                opts.event += '.textEditor';\n            }\n\n            this.bind(opts.event, opts, editEvent);\n            this.attr(EVENT_ATTR, opts.event);\n\n            // If it is empty to start with, apply the empty message\n            if (this.html().length == 0 && opts.emptyMessage) {\n                this.html(opts.emptyMessage);\n                this.attr(EMPTY_ATTR, 'empty');\n            } else {\n                this.removeAttr(EMPTY_ATTR);\n            }\n        }\n\n        return this;\n    };\n\n    /**\n     * Add :editable :editing to $.is()\n     * @param {Object} statement\n     * @return {*}\n     */\n    $.fn.is = function(statement) {\n        if( typeof statement == 'string' && statement.indexOf(':') === 0) {\n            if( statement == ':editable' ) {\n                return this.attr(EVENT_ATTR) !== undefined;\n            } else if( statement == ':editing' ) {\n                return this.attr(IS_EDITING_ATTR) !== undefined;\n            } else if( statement == ':empty' ) {\n                return this.attr(EMPTY_ATTR) !== undefined;\n            }\n        }\n        return oldjQueryIs.apply(this, arguments);\n    };\n\n    // The latest element clicked\n    var clickedElement;\n    $(document).mousedown(function(e) {\n        clickedElement = $(e.target);\n    });\n\n})(window.jQuery, window);\n"],"names":["$","window","undefined","jQuery","clickedElement","$win","$textArea","$currentlyEdited","EVENT_ATTR","EMPTY_ATTR","SUPPORTS_TOUCH","TINYMCE_INSTALLED","tinyMCE","init","oldjQueryIs","fn","is","lastTap","tapper","now","Date","getTime","this","trigger","keyHandler","e","keyCode","data","closeOnEnter","editable","val","attr","toggleFontSize","metaKey","fontSize","parseInt","css","adjustTextAreaHeight","scrollHeight","resetElement","$el","newText","emptyMessage","removeAttr","length","html","remove","elementEditor","opts","defaultText","trim","defaultFontSize","elementHeight","height","textareaStyle","lineBreaks","replace","text","id","appendTo","mode","elements","width","innerWidth","theme_advanced_resize_vertical","setup","ed","onInit","add","editor","editorWindow","getWin","hasPressedKey","editorBlur","getDoc","find","get","nodeName","unbind","callback","content","setTimeout","bind","onkeydown","focus","blur","newFontSize","RegExp","margin","padding","overflow","editorStyle","select","editEvent","event","children","extend","touch","statement","indexOf","apply","arguments","document","mousedown","target"],"mappings":"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"}