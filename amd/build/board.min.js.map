{"version":3,"sources":["../src/board.js"],"names":["_serviceCall","method","args","callback","failcallback","Ajax","call","methodname","done","data","fail","error","Notification","exception","isAriaTriggerKey","key","encodeText","rawText","text","html","decodeText","encodedText","handleAction","elem","on","e","type","keyCode","preventDefault","handleEditableAction","callBeforeOnKeyEditing","is","Error","editable","board","options","contextid","strings","default_column_heading","post_button_text","cancel_button_text","remove_note_title","remove_note_text","remove_column_title","note_changed_title","note_changed_text","note_deleted_text","rate_note_text","Ok","delete","Cancel","warning","modal_title_new","modal_title_edit","option_youtube","option_image","option_link","aria_newcolumn","aria_newpost","aria_deletecolumn","aria_deletepost","aria_addmedia","aria_addmedianew","aria_deleteattachment","aria_postedit","aria_canceledit","aria_postnew","aria_cancelnew","aria_ratepost","invalid_file_extension","invalid_file_size_min","invalid_file_size_max","invalid_youtube_url","MEDIA_SELECTION_BUTTONS","ATTACHMENT_IMAGE","SORTBY_DATE","SORTBY_RATING","SORTBY_NONE","reloadTimer","lastHistoryId","isEditor","usersCanEdit","userId","mediaSelection","mediaselection","editingNote","isReadOnlyBoard","readonly","ratingenabled","sortby","editModal","serviceCall","stopUpdating","apply","arguments","updateBoard","getNote","ident","getNoteTextForNote","note","find","getNoteHeadingForNote","getNoteBorderForNote","getNoteAttachmentsForNote","textIdentifierForNote","noteText","noteHeading","noteAttachment","attachmentDataForNote","length","replace","split","slice","join","info","updateNoteAria","noteId","columnIdentifier","closest","noteIdentifier","deleteNoteString","attr","updateColumnAria","columnId","column","newNoteString","deleteColumnString","each","index","stopNoteEdit","remove","noteBorder","show","hide","startNoteEdit","pendingNote","showModalForm","deleteNote","confirm","id","result","status","historyid","columnID","sortorder","sortAfterDelete","getColumn","elements","children","filter","_","element","parseInt","so","rateNote","rating","canrate","sortNotes","then","rateModal","getRoot","ModalEvents","hidden","attachmentTypeChanged","val","attachmentInfo","attachmentUrl","attachmentFile","prop","attachmentTypeToString","FileReader","setAttachment","attachment","attType","url","previewAttachment","filename","filecontents","fileElem","getEmbedUrl","videoID","match","addClass","removeClass","addNote","columnid","heading","content","owner","ismynote","iseditable","notecontent","noteAriaText","attachmentPreview","append","columnContent","beginEdit","rateElement","removeElement","lastOne","last","insertAfter","prepend","addColumn","name","notes","colour","headerStyle","nameCache","columnHeader","columnSort","columnName","columnNewContent","hideheaders","getColumnName","toggleFontSize","closeOnEnter","noteicon","timecreated","userid","updateSortable","addNewColumnButton","newBusy","columnicon","boardid","selectHeadingColour","colCount","colourCount","colours","updateNote","processBoardHistory","since","boardhistory","item","JSON","parse","action","formModal","alert","instant","history_refresh","setTimeout","clearTimeout","toggle","sortCol","parent","direction","desc","asc","a","b","sortElements","sort","appendTo","fromColumnID","sortable","connectWith","cancel","start","ui","stop","tocolumn","noteid","columnElements","payload","updateSortOrders","toColumnID","noteID","newSortOrder","toColumn","movedNote","oldSortOrder","toChildren","sortOrder","fromColumn","fromChildren","getBody","Fragment","loadFragment","updateModalAria","modal","addYoutube","addImage","addLink","postButton","cancelButton","modalRoot","button","getActionSelector","title","ModalFactory","create","types","SAVE_CANCEL","body","large","removeOnClose","getBodyPromise","saveInProgress","setLarge","setSaveButtonText","setButtonText","save","submit","changeEvent","document","createEvent","initEvent","valid","get","reportValidity","dispatchEvent","invalid","$","merge","first","focus","formData","stringify","serialize","jsonformdata","Y","use","M","core_formchangechecker","reset_form_dirty_state","destroy","mediaSelect","ytButton","pictureButton","linkButton","updateMediaButtons","init","columns","stringsInfo","string","push","component","when","results"],"mappings":"sSAwBA,OAGA,OACA,OACA,OACA,OAEA,O,sDAYMA,CAAAA,CAAY,CAAG,SAASC,CAAT,CAAiBC,CAAjB,CAAuBC,CAAvB,CAAiCC,CAAjC,CAA+C,CAChEC,UAAKC,IAAL,CAAU,CAAC,CACPC,UAAU,CAAE,aAAeN,CADpB,CAEPC,IAAI,CAAEA,CAFC,CAGPM,IAAI,CAAE,cAASC,CAAT,CAAe,CACjBN,CAAQ,CAACM,CAAD,CACX,CALM,CAMPC,IAAI,CAAE,cAASC,CAAT,CAAgB,CAClBC,UAAaC,SAAb,CAAuBF,CAAvB,EACA,GAAIP,CAAJ,CAAkB,CACdA,CAAY,CAACO,CAAD,CACf,CACJ,CAXM,CAAD,CAAV,CAaH,C,CAUKG,CAAgB,CAAG,SAASC,CAAT,CAAc,CACnC,MAAc,GAAP,EAAAA,CAAG,EAAiB,EAAP,EAAAA,CACvB,C,CASKC,CAAU,CAAG,SAASC,CAAT,CAAkB,CACjC,MAAO,cAAE,SAAF,EAAaC,IAAb,CAAkBD,CAAlB,EAA2BE,IAA3B,EACV,C,CASKC,CAAU,CAAG,SAASC,CAAT,CAAsB,CACrC,MAAO,cAAE,SAAF,EAAaF,IAAb,CAAkBE,CAAlB,EAA+BH,IAA/B,EACV,C,CAUKI,CAAY,CAAG,SAASC,CAAT,CAAepB,CAAf,CAAyB,CAC1C,MAAOoB,CAAAA,CAAI,CAACC,EAAL,CAAQ,gBAAR,CAA0B,SAASC,CAAT,CAAY,CACzC,GAAc,UAAV,EAAAA,CAAC,CAACC,IAAN,CAA0B,CACtB,GAAIZ,CAAgB,CAACW,CAAC,CAACE,OAAH,CAApB,CAAiC,CAC7BF,CAAC,CAACG,cAAF,EACH,CAFD,IAEO,CACH,MACH,CACJ,CAEDzB,CAAQ,EACX,CAVM,CAWV,C,CAWK0B,CAAoB,CAAG,SAASN,CAAT,CAAepB,CAAf,CAAyB2B,CAAzB,CAAiD,CAC1E,GAAIP,CAAI,CAACQ,EAAL,CAAQ,WAAR,CAAJ,CAA0B,CACtB,KAAM,IAAIC,CAAAA,KAAJ,CAAU,8EAAV,CACT,CAGD,MAAOT,CAAAA,CAAI,CAACC,EAAL,CAAQ,mBAAR,CAA6B,SAASC,CAAT,CAAY,CAC5C,GAAc,UAAV,EAAAA,CAAC,CAACC,IAAN,CAA0B,CACtB,GAAIZ,CAAgB,CAACW,CAAC,CAACE,OAAH,CAAhB,EAA+B,CAACJ,CAAI,CAACQ,EAAL,CAAQ,UAAR,CAApC,CAAyD,CACrDN,CAAC,CAACG,cAAF,GACA,GAAIE,CAAJ,CAA4B,CACxB3B,CAAQ,EACX,CACDoB,CAAI,CAACU,QAAL,CAAc,MAAd,EACA,GAAIH,CAAJ,CAA4B,CACxB,MACH,CACJ,CATD,IASO,CACH,MACH,CACJ,CAED3B,CAAQ,EACX,CAjBM,CAkBV,C,CASc,WAAS+B,CAAT,CAAgBC,CAAhB,CAAyBC,CAAzB,CAAoC,IAG3CC,CAAAA,CAAO,CAAG,CACVC,sBAAsB,CAAE,EADd,CAEVC,gBAAgB,CAAE,EAFR,CAGVC,kBAAkB,CAAE,EAHV,CAIVC,iBAAiB,CAAE,EAJT,CAKVC,gBAAgB,CAAE,EALR,CAMVC,mBAAmB,CAAE,EANX,CAOVC,kBAAkB,CAAE,EAPV,CAQVC,iBAAiB,CAAE,EART,CASVC,iBAAiB,CAAE,EATT,CAUVC,cAAc,CAAE,EAVN,CAWVC,EAAE,CAAE,EAXM,CAYVC,MAAM,CAAE,EAZE,CAaVC,MAAM,CAAE,EAbE,CAcVC,OAAO,CAAE,EAdC,CAeVC,eAAe,CAAE,EAfP,CAgBVC,gBAAgB,CAAE,EAhBR,CAiBVC,cAAc,CAAE,EAjBN,CAkBVC,YAAY,CAAE,EAlBJ,CAmBVC,WAAW,CAAE,EAnBH,CAqBVC,cAAc,CAAE,EArBN,CAsBVC,YAAY,CAAE,EAtBJ,CAuBVC,iBAAiB,CAAE,EAvBT,CAwBVC,eAAe,CAAE,EAxBP,CAyBVC,aAAa,CAAE,EAzBL,CA0BVC,gBAAgB,CAAE,EA1BR,CA2BVC,qBAAqB,CAAE,EA3Bb,CA4BVC,aAAa,CAAE,EA5BL,CA6BVC,eAAe,CAAE,EA7BP,CA8BVC,YAAY,CAAE,EA9BJ,CA+BVC,cAAc,CAAE,EA/BN,CAgCVC,aAAa,CAAE,EAhCL,CAkCVC,sBAAsB,CAAE,EAlCd,CAmCVC,qBAAqB,CAAE,EAnCb,CAoCVC,qBAAqB,CAAE,EApCb,CAsCVC,mBAAmB,CAAE,EAtCX,CAHiC,CA4CzCC,CAAuB,CAAG,CA5Ce,CA8CzCC,CAAgB,CAAG,CA9CsB,CAgDzCC,CAAW,CAAG,CAhD2B,CAiDzCC,CAAa,CAAG,CAjDyB,CAkDzCC,CAAW,CAAG,CAlD2B,CAmD3CC,CAAW,CAAG,IAnD6B,CAoD3CC,CAAa,CAAG,IApD2B,CAqD3CC,CAAQ,CAAG7C,CAAO,CAAC6C,QAAR,IArDgC,CAsD3CC,CAAY,CAAG9C,CAAO,CAAC8C,YAtDoB,CAuD3CC,CAAM,CAAG/C,CAAO,CAAC+C,MAAR,EAAkB,CAAC,CAvDe,CAwD3CC,CAAc,CAAGhD,CAAO,CAACiD,cAAR,EAA0BX,CAxDA,CAyD3CY,CAAW,CAAG,CAzD6B,CA0D3CC,CAAe,CAAGnD,CAAO,CAACoD,QAAR,IA1DyB,CA2D3CC,CAAa,CAAGrD,CAAO,CAACqD,aA3DmB,CA4D3CC,CAAM,CAAGtD,CAAO,CAACsD,MAAR,EAAkBd,CA5DgB,CA6D3Ce,CAAS,CAAG,IA7D+B,CAuE3CC,CAAW,CAAG,SAAS1F,CAAT,CAAiBC,CAAjB,CAAuBC,CAAvB,CAAiCC,CAAjC,CAA+C,CAC7D,GAAe,eAAX,GAAAH,CAAJ,CAAgC,CAC5B2F,EAAY,EACf,CACD5F,CAAY,CAACC,CAAD,CAASC,CAAT,CAAe,UAAW,CAClCC,CAAQ,CAAC0F,KAAT,CAAe,IAAf,CAAqBC,SAArB,EACA,GAAe,eAAX,GAAA7F,CAAM,EAAkC,WAAV,EAAAA,CAAlC,CAAyD,CACrD8F,EAAW,IACd,CACJ,CALW,CAKT3F,CALS,CAMf,CAjF8C,CA0F3C4F,CAAO,CAAG,SAASC,CAAT,CAAgB,CAC1B,MAAO,cAAE,2BAA6BA,CAA7B,CAAqC,IAAvC,CACV,CA5F8C,CAqG3CC,CAAkB,CAAG,SAASC,CAAT,CAAe,CACpC,MAAO,cAAEA,CAAF,EAAQC,IAAR,CAAa,sBAAb,CACV,CAvG8C,CAgH3CC,CAAqB,CAAG,SAASF,CAAT,CAAe,CACvC,MAAO,cAAEA,CAAF,EAAQC,IAAR,CAAa,yBAAb,CACV,CAlH8C,CA2H3CE,CAAoB,CAAG,SAASH,CAAT,CAAe,CACtC,MAAO,cAAEA,CAAF,EAAQC,IAAR,CAAa,wBAAb,CACV,CA7H8C,CAsI3CG,CAAyB,CAAG,SAASJ,CAAT,CAAe,CAC3C,MAAO,cAAEA,CAAF,EAAQC,IAAR,CAAa,4BAAb,CACV,CAxI8C,CAiJ3CI,CAAqB,CAAG,SAASL,CAAT,CAAe,CACvC,GAAIM,CAAAA,CAAQ,CAAGP,CAAkB,CAACC,CAAD,CAAlB,CAAyBhF,IAAzB,EAAf,CACIuF,CAAW,CAAGL,CAAqB,CAACF,CAAD,CAArB,CAA4BhF,IAA5B,EADlB,CAEIwF,CAAc,CAAGC,CAAqB,CAACT,CAAD,CAF1C,CAIA,GAAyB,CAArB,CAAAO,CAAW,CAACG,MAAhB,CAA4B,CACxB,MAAOH,CAAAA,CACV,CACD,GAAsB,CAAlB,CAAAD,CAAQ,CAACI,MAAb,CAAyB,CACrB,MAAOJ,CAAAA,CAAQ,CAACK,OAAT,CAAiB,cAAjB,CAAiC,GAAjC,EAAsCA,OAAtC,CAA8C,KAA9C,CAAqD,GAArD,EAA0DC,KAA1D,CAAgE,KAAhE,EAAuEC,KAAvE,CAA6E,CAA7E,CAAgF,CAAhF,EAAmFC,IAAnF,CAAwF,GAAxF,CACV,CACD,GAAIN,CAAc,CAACO,IAAf,EAAoD,CAA7B,CAAAP,CAAc,CAACO,IAAf,CAAoBL,MAA/C,CAA2D,CACvD,MAAOF,CAAAA,CAAc,CAACO,IACzB,CACD,MAAO,KACV,CAhK8C,CAwK3CC,CAAc,CAAG,SAASC,CAAT,CAAiB,CAClC,GAAIjB,CAAAA,CAAI,CAAGH,CAAO,CAACoB,CAAD,CAAlB,CACIC,CAAgB,CAAGlB,CAAI,CAACmB,OAAL,CAAa,eAAb,EAA8BlB,IAA9B,CAAmC,wBAAnC,EAA6DlF,IAA7D,EADvB,CAGA,GAAIkG,CAAJ,CAAY,CACR,GAAIG,CAAAA,CAAc,CAAGf,CAAqB,CAACL,CAAD,CAA1C,CACIqB,CAAgB,CAAGnF,CAAO,CAACuB,eAAR,CAAwBkD,OAAxB,CAAgC,UAAhC,CAA4CO,CAA5C,EAA8DP,OAA9D,CAAsE,QAAtE,CAAgFS,CAAhF,CADvB,CAGApB,CAAI,CAACC,IAAL,CAAU,cAAV,EAA0BqB,IAA1B,CAA+B,YAA/B,CAA6CD,CAA7C,EAA+DC,IAA/D,CAAoE,OAApE,CAA6ED,CAA7E,EACArB,CAAI,CAACC,IAAL,CAAU,mBAAV,EAA+BqB,IAA/B,CAAoC,YAApC,CAAkDpF,CAAO,CAAC+B,aAAR,CAAsB0C,OAAtB,CAA8B,UAA9B,CAC9CO,CAD8C,EAC5BP,OAD4B,CACpB,QADoB,CACVS,CADU,CAAlD,EAEApB,CAAI,CAACC,IAAL,CAAU,gBAAV,EAA4BjF,IAA5B,CAAiCoG,CAAjC,CACH,CAEJ,CAtL8C,CA8L3CG,CAAgB,CAAG,SAASC,CAAT,CAAmB,CACtC,GAAIC,CAAAA,CAAM,CAAG,cAAE,4BAA8BD,CAA9B,CAAyC,GAA3C,CAAb,CACIN,CAAgB,CAAGO,CAAM,CAACxB,IAAP,CAAY,wBAAZ,EAAsClF,IAAtC,EADvB,CAEI2G,CAAa,CAAGxF,CAAO,CAACqB,YAAR,CAAqBoD,OAArB,CAA6B,UAA7B,CAAyCO,CAAzC,CAFpB,CAGIS,CAAkB,CAAGzF,CAAO,CAACsB,iBAAR,CAA0BmD,OAA1B,CAAkC,UAAlC,CAA8CO,CAA9C,CAHzB,CAIAO,CAAM,CAACxB,IAAP,CAAY,UAAZ,EAAwBqB,IAAxB,CAA6B,YAA7B,CAA2CI,CAA3C,EAA0DJ,IAA1D,CAA+D,OAA/D,CAAwEI,CAAxE,EACAD,CAAM,CAACxB,IAAP,CAAY,gBAAZ,EAA8BqB,IAA9B,CAAmC,YAAnC,CAAiDK,CAAjD,EAAqEL,IAArE,CAA0E,OAA1E,CAAmFK,CAAnF,EAEAF,CAAM,CAACxB,IAAP,CAAY,aAAZ,EAA2B2B,IAA3B,CAAgC,SAASC,CAAT,CAAgB7B,CAAhB,CAAsB,CAClDgB,CAAc,CAAC,cAAEhB,CAAF,EAAQ1F,IAAR,CAAa,OAAb,CAAD,CACjB,CAFD,CAGH,CAzM8C,CAgN3CwH,CAAY,CAAG,UAAW,CAC1B,GAAI,CAAC5C,CAAL,CAAkB,CACdW,CAAO,CAAC,CAAD,CAAP,CAAWkC,MAAX,GACA,MACH,CAED,GAAI/B,CAAAA,CAAI,CAAGH,CAAO,CAACX,CAAD,CAAlB,CAEA,GAAIc,CAAJ,CAAU,IACFO,CAAAA,CAAW,CAAGL,CAAqB,CAACF,CAAD,CADjC,CAEFM,CAAQ,CAAGP,CAAkB,CAACC,CAAD,CAF3B,CAGFgC,CAAU,CAAG7B,CAAoB,CAACH,CAAD,CAH/B,CAMNO,CAAW,CAAC0B,IAAZ,GACAD,CAAU,CAACC,IAAX,GACA3B,CAAQ,CAAC2B,IAAT,GACA,GAAI,CAAC1B,CAAW,CAACvF,IAAZ,EAAL,CAAyB,CACrBuF,CAAW,CAAC2B,IAAZ,GACAF,CAAU,CAACE,IAAX,EACH,CACD,GAAI,CAAC5B,CAAQ,CAACtF,IAAT,EAAD,EAAoBuF,CAAW,CAACvF,IAAZ,EAAxB,CAA4C,CACxCsF,CAAQ,CAAC4B,IAAT,GACAF,CAAU,CAACE,IAAX,EACH,CACJ,CAEDhD,CAAW,CAAG,CACjB,CA5O8C,CAoP3CiD,CAAa,CAAG,SAASrC,CAAT,CAAgB,CAEhC,GAAIZ,CAAJ,CAAiB,CACb,GAAIA,CAAW,EAAIY,CAAnB,CAA0B,CACtB,MACH,CACDgC,CAAY,EACf,CAED,GAAIhC,CAAJ,CAAW,CACP,GAAIsC,CAAAA,CAAW,CAAGvC,CAAO,CAAC,CAAD,CAAzB,CACA,GAAIuC,CAAJ,CAAiB,CACbA,CAAW,CAACL,MAAZ,EACH,CACJ,CAED,GAAI/B,CAAAA,CAAI,CAAGH,CAAO,CAACC,CAAD,CAAlB,CACA,GAAIE,CAAJ,CAAU,CACNqC,EAAa,CAACrC,CAAD,CAAb,CAEA,GAAIF,CAAJ,CAAW,CACPZ,CAAW,CAAGY,CACjB,CACJ,CACJ,CA5Q8C,CAoR3CwC,CAAU,CAAG,SAASxC,CAAT,CAAgB,CAC7BrF,UAAa8H,OAAb,CACIrG,CAAO,CAACI,iBADZ,CAEIJ,CAAO,CAACK,gBAFZ,CAGIL,CAAO,CAACY,MAHZ,CAIIZ,CAAO,CAACa,MAJZ,CAKI,UAAW,CACPyC,CAAW,CAAC,aAAD,CAAgB,CAAEgD,EAAE,CAAE1C,CAAN,CAAhB,CAA+B,SAAU2C,CAAV,CAAkB,CACxD,GAAIA,CAAM,CAACC,MAAX,CAAmB,CACf9D,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACA,GAAI3C,CAAAA,CAAI,CAAGH,CAAO,CAACC,CAAD,CAAlB,CACA,GAAIR,CAAM,EAAIZ,CAAd,CAA2B,IACnBkE,CAAAA,CAAQ,CAAG5C,CAAI,CAAC1F,IAAL,CAAU,QAAV,CADQ,CAEnBuI,CAAS,CAAG7C,CAAI,CAAC1F,IAAL,CAAU,WAAV,CAFO,CAGvBwI,CAAe,CAACF,CAAD,CAAWC,CAAX,CAClB,CACD7C,CAAI,CAAC+B,MAAL,EACH,CACJ,CAXU,CAYd,CAlBL,CAoBH,CAzS8C,CAgTzCgB,CAAS,CAAG,SAACH,CAAD,CAAc,CAC5B,MAAO,kDAA+BA,CAA/B,6BACV,CAlT8C,CAoTzCE,CAAe,CAAG,SAACF,CAAD,CAAWC,CAAX,CAAyB,IACzCpB,CAAAA,CAAM,CAAGsB,CAAS,CAACH,CAAD,CADuB,CAEzCI,CAAQ,CAAGvB,CAAM,CAACwB,QAAP,GAAkBC,MAAlB,CAAyB,SAACC,CAAD,CAAIC,CAAJ,CAAgB,CACpD,MAAOC,CAAAA,QAAQ,CAAC,cAAED,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAAD,CAAR,CAAyC+I,QAAQ,CAACR,CAAD,CAC3D,CAFc,CAF8B,CAK7CG,CAAQ,CAACpB,IAAT,CAAc,SAACuB,CAAD,CAAIC,CAAJ,CAAgB,CAC1B,GAAIE,CAAAA,CAAE,CAAG,cAAEF,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAAT,CACA,cAAE8I,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAA6BgJ,CAAE,CAAG,CAAlC,CACH,CAHD,CAIH,CA7T8C,CAqU3CC,CAAQ,CAAG,SAASzD,CAAT,CAAgB,CAC3B,GAAI,CAACT,CAAL,CAAoB,CAChB,MACH,CACD,GAAIF,CAAJ,CAAqB,CACjB,MACH,CAED,GAAIa,CAAAA,CAAI,CAAGH,CAAO,CAACC,CAAD,CAAlB,CACI0D,CAAM,CAAGxD,CAAI,CAACC,IAAL,CAAU,mBAAV,CADb,CAEA,GAAIuD,CAAM,CAAClJ,IAAP,CAAY,UAAZ,CAAJ,CAA6B,CACzB,MACH,CACDkJ,CAAM,CAAClJ,IAAP,CAAY,UAAZ,KAEAkF,CAAW,CAAC,eAAD,CAAkB,CAACgD,EAAE,CAAE1C,CAAL,CAAlB,CAA+B,SAAS2D,CAAT,CAAkB,CACxD,GAAIA,CAAJ,CAAa,CACThJ,UAAa8H,OAAb,CACIrG,CAAO,CAACU,cADZ,CAEI,IAFJ,CAGIV,CAAO,CAACW,EAHZ,CAIIX,CAAO,CAACa,MAJZ,CAKI,UAAW,CACPyC,CAAW,CAAC,WAAD,CAAc,CAACgD,EAAE,CAAE1C,CAAL,CAAd,CAA2B,SAAS2C,CAAT,CAAiB,CACnD,GAAIA,CAAM,CAACC,MAAX,CAAmB,CACf9D,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACAa,CAAM,CAACxI,IAAP,CAAYyH,CAAM,CAACe,MAAnB,EACA,GAAIlE,CAAM,EAAIb,CAAd,CAA6B,CACzBiF,EAAS,CAAC1D,CAAI,CAACmB,OAAL,CAAa,uBAAb,CAAD,CACZ,CACJ,CACDqC,CAAM,CAAClJ,IAAP,CAAY,UAAZ,IACH,CATU,CAUd,CAhBL,EAiBEqJ,IAjBF,CAiBO,SAASC,CAAT,CAAoB,CAEvBA,CAAS,CAACC,OAAV,GAAoBxI,EAApB,CAAuByI,UAAYC,MAAnC,CAA2C,UAAW,CAClDP,CAAM,CAAClJ,IAAP,CAAY,UAAZ,IACH,CAFD,CAGH,CAtBD,CAuBH,CACJ,CA1BU,CA2Bd,CA/W8C,CAuX3C0J,CAAqB,CAAG,SAAShE,CAAT,CAAe,CACvC,GAAIQ,CAAAA,CAAc,CAAGJ,CAAyB,CAACJ,CAAD,CAA9C,CACIzE,CAAI,CAAGiF,CAAc,CAACP,IAAf,CAAoB,iBAApB,EAAuCgE,GAAvC,EADX,CAEIC,CAAc,CAAG1D,CAAc,CAACP,IAAf,CAAoB,OAApB,CAFrB,CAGIkE,CAAa,CAAG3D,CAAc,CAACP,IAAf,CAAoB,MAApB,CAHpB,CAIImE,CAAc,CAAG5D,CAAc,CAACP,IAAf,CAAoB,iBAApB,CAJrB,CAMA,GAAW,GAAP,CAAA1E,CAAJ,CAAgB,CACZ2I,CAAc,CAACG,IAAf,CAAoB,aAApB,CAAmCnI,CAAO,CAAC,UAAYoI,CAAsB,CAAC/I,CAAD,CAAlC,CAA2C,OAA5C,CAA1C,EACA4I,CAAa,CAACE,IAAd,CAAmB,aAAnB,CAAkCnI,CAAO,CAAC,UAAYoI,CAAsB,CAAC/I,CAAD,CAAlC,CAA2C,MAA5C,CAAzC,EAEA2I,CAAc,CAACjC,IAAf,GACA,GAAI1G,CAAI,EAAIgD,CAAR,EAA4BgG,UAAhC,CAA4C,CACxCH,CAAc,CAACnC,IAAf,GACAkC,CAAa,CAACjC,IAAd,EACH,CAHD,IAGO,CACHkC,CAAc,CAAClC,IAAf,GACAiC,CAAa,CAAClC,IAAd,EACH,CACJ,CAZD,IAYO,CACHiC,CAAc,CAAChC,IAAf,GACAiC,CAAa,CAACjC,IAAd,GACAkC,CAAc,CAAClC,IAAf,GAEAgC,CAAc,CAACD,GAAf,CAAmB,EAAnB,EACAE,CAAa,CAACF,GAAd,CAAkB,EAAlB,CAEH,CACJ,CAnZ8C,CA4Z3CO,CAAa,CAAG,SAASxE,CAAT,CAAeyE,CAAf,CAA2B,CAC3C,GAAIjE,CAAAA,CAAc,CAAGJ,CAAyB,CAACJ,CAAD,CAA9C,CACA,GAAIQ,CAAJ,CAAoB,CAChB,GAAI,CAACiE,CAAL,CAAiB,CACbA,CAAU,CAAG,CAAClJ,IAAI,CAAE,GAAP,CAChB,CAFD,IAEO,CACHkJ,CAAU,CAAClJ,IAAX,EAAmB,EACtB,CACD,GAAImJ,CAAAA,CAAO,CAAGlE,CAAc,CAACP,IAAf,CAAoB,iBAApB,CAAd,CACAyE,CAAO,CAACT,GAAR,CAAYQ,CAAU,CAAClJ,IAAX,CAAkBkJ,CAAU,CAAClJ,IAA7B,CAAoC,GAAhD,EACA,GAAoB,GAAhB,CAAAmJ,CAAO,CAACT,GAAR,EAAJ,CAAyB,CACrBzD,CAAc,CAACP,IAAf,CAAoB,OAApB,EAA6BgE,GAA7B,CAAiChJ,CAAU,CAACwJ,CAAU,CAAC1D,IAAZ,CAA3C,EACAP,CAAc,CAACP,IAAf,CAAoB,MAApB,EAA4BgE,GAA5B,CAAgChJ,CAAU,CAACwJ,CAAU,CAACE,GAAZ,CAA1C,CACH,CACDX,CAAqB,CAAChE,CAAD,CAAOyE,CAAP,CACxB,CACDG,CAAiB,CAAC5E,CAAD,CAAOyE,CAAP,CACpB,CA7a8C,CAsb3ChE,CAAqB,CAAG,SAAST,CAAT,CAAe,CACvC,GAAIyE,CAAAA,CAAU,CAAG,CAAClJ,IAAI,CAAE,CAAP,CAAUwF,IAAI,CAAE,IAAhB,CAAsB4D,GAAG,CAAE,IAA3B,CAAiCE,QAAQ,CAAE,IAA3C,CAAiDC,YAAY,CAAE,IAA/D,CAAjB,CACItE,CAAc,CAAGJ,CAAyB,CAACJ,CAAD,CAD9C,CAEA,GAAIQ,CAAc,CAACE,MAAnB,CAA2B,CACvB+D,CAAU,CAAClJ,IAAX,CAAkBiF,CAAc,CAACP,IAAf,CAAoB,iBAApB,EAAuCgE,GAAvC,EAAlB,CACAQ,CAAU,CAAC1D,IAAX,CAAkBlG,CAAU,CAAC2F,CAAc,CAACP,IAAf,CAAoB,OAApB,EAA6BgE,GAA7B,EAAD,CAA5B,CACAQ,CAAU,CAACE,GAAX,CAAiB9J,CAAU,CAAC2F,CAAc,CAACP,IAAf,CAAoB,MAApB,EAA4BgE,GAA5B,EAAD,CAA3B,CACA,GAAIc,CAAAA,CAAQ,CAAGvE,CAAc,CAACP,IAAf,CAAoB,uBAApB,CAAf,CACA,GAAI8E,CAAQ,CAACzK,IAAT,CAAc,UAAd,CAAJ,CAA+B,CAC3BmK,CAAU,CAACI,QAAX,CAAsBE,CAAQ,CAACzK,IAAT,CAAc,UAAd,CAAtB,CACAmK,CAAU,CAACK,YAAX,CAA0BC,CAAQ,CAACzK,IAAT,CAAc,cAAd,CAC7B,CACJ,CACD,GAAI,CAAC,CAACmK,CAAU,CAAC1D,IAAZ,EAAoB,CAAC0D,CAAU,CAAC1D,IAAX,CAAgBL,MAAtC,IAAkD,CAAC+D,CAAU,CAACE,GAAZ,EAAmB,CAACF,CAAU,CAACE,GAAX,CAAejE,MAArF,GACC,CAAC+D,CAAU,CAACI,QADjB,CAC4B,CACxBJ,CAAU,CAAClJ,IAAX,CAAkB,CACrB,CAED,MAAOkJ,CAAAA,CACV,CAzc8C,CAkd3CH,CAAsB,CAAG,SAAS/I,CAAT,CAAe,CACxC,OAAQA,CAAR,EACI,IAAK,GAAL,CAAU,MAAO,SAAP,CACV,IAAK,GAAL,CAAU,MAAO,OAAP,CACV,IAAK,GAAL,CAAU,MAAO,MAAP,CACV,QAAS,MAAO,KAAP,CAJb,CAMH,CAzd8C,CAiezCyJ,CAAW,CAAG,SAACL,CAAD,CAAS,IAGrBM,CAAAA,CAAO,CAAGN,CAAG,CAACO,KAAJ,CADF,uCACE,CAHW,CAIzB,GAAI,CAACD,CAAD,EAAYA,CAAO,CAAC,CAAD,CAAP,SAAZ,EAA8D,EAAtB,GAAAA,CAAO,CAAC,CAAD,CAAP,CAAWvE,MAAvD,CAAsE,CAClE,MAAO,KACV,CACD,0CAAoCuE,CAAO,CAAC,CAAD,CAA3C,CACH,CAze8C,CAkf3CL,CAAiB,CAAG,SAAS5E,CAAT,CAAeyE,CAAf,CAA2B,CAC/C,GAAIrJ,CAAAA,CAAI,CAAG4E,CAAI,CAACC,IAAL,CAAU,oBAAV,CAAX,CACA,GAAI,CAACwE,CAAL,CAAiB,CACbA,CAAU,CAAGhE,CAAqB,CAACT,CAAD,CACrC,CAED,GAAI,CAACD,CAAkB,CAACC,CAAD,CAAlB,CAAyBhF,IAAzB,GAAgC0F,MAArC,CAA6C,CACzCtF,CAAI,CAAC+J,QAAL,CAAc,kBAAd,CACH,CAFD,IAEO,CACH/J,CAAI,CAACgK,WAAL,CAAiB,kBAAjB,CACH,CAEDhK,CAAI,CAACgK,WAAL,CAAiB,iBAAjB,EACAhK,CAAI,CAACgK,WAAL,CAAiB,eAAjB,EACAhK,CAAI,CAACgK,WAAL,CAAiB,aAAjB,EACA,GAAIX,CAAU,CAACI,QAAX,EAAuBxB,QAAQ,CAACoB,CAAU,CAAClJ,IAAZ,CAAR,EAA6BgD,CAAxD,CAA0E,CACtEnD,CAAI,CAACJ,IAAL,sBAAuByJ,CAAU,CAACK,YAAlC,qBAAwDL,CAAU,CAAC1D,IAAnE,+DAEA3F,CAAI,CAAC+J,QAAL,CAAc,eAAd,EACA/J,CAAI,CAAC6G,IAAL,EACH,CALD,IAKO,IAAIwC,CAAU,CAACE,GAAf,CAAoB,CACvB,OAAQtB,QAAQ,CAACoB,CAAU,CAAClJ,IAAZ,CAAhB,EACI,IA3da,EA2db,CAAuB,CACnB,GAAIoJ,CAAAA,CAAG,CAAGK,CAAW,CAACP,CAAU,CAACE,GAAZ,CAArB,CACA,GAAY,IAAR,GAAAA,CAAJ,CAAkB,CACdvJ,CAAI,CAACJ,IAAL,CAAUkB,CAAO,CAACmC,mBAAlB,CACH,CAFD,IAEO,CACHjD,CAAI,CAACJ,IAAL,CAAU,iBAAkB2J,CAAlB,uLAAV,EAGAvJ,CAAI,CAAC+J,QAAL,CAAc,iBAAd,CACH,CACD/J,CAAI,CAAC6G,IAAL,EACH,CACD,MACA,IAAK1D,CAAAA,CAAL,CACInD,CAAI,CAACJ,IAAL,sBAAuByJ,CAAU,CAACE,GAAlC,qBAA+CF,CAAU,CAAC1D,IAA1D,uEAEA3F,CAAI,CAAC+J,QAAL,CAAc,eAAd,EACA/J,CAAI,CAAC6G,IAAL,GACJ,MACA,IA5eY,EA4eZ,CACI7G,CAAI,CAACJ,IAAL,CAAU,aAAcyJ,CAAU,CAACE,GAAzB,CAA+B,2DAA/B,EACAF,CAAU,CAAC1D,IAAX,EAAmB0D,CAAU,CAACE,GAD9B,EACqC,MAD/C,EAEAvJ,CAAI,CAAC+J,QAAL,CAAc,aAAd,EACA/J,CAAI,CAAC6G,IAAL,GACJ,MACA,QACI7G,CAAI,CAACJ,IAAL,CAAU,EAAV,EACAI,CAAI,CAAC8G,IAAL,GA5BR,CA8BH,CA/BM,IA+BA,CACH9G,CAAI,CAACJ,IAAL,CAAU,EAAV,EACAI,CAAI,CAAC8G,IAAL,EACH,CACJ,CAziB8C,CAwjB3CmD,EAAO,CAAG,SAASC,CAAT,CAAmBxF,CAAnB,CAA0ByF,CAA1B,CAAmCC,CAAnC,CAA4Cf,CAA5C,CAAwDgB,CAAxD,CAA+D5C,CAA/D,CAA0EW,CAA1E,CAAkF,IACxFkC,CAAAA,CAAQ,CAAGD,CAAK,CAACjD,EAAN,EAAYzD,CAAZ,EAAsB,CAACe,CADsD,CAExF6F,CAAU,CAAG9G,CAAQ,EAAK6G,CAAQ,EAAI,CAACvG,CAFiD,CAI5F,GAAI,CAACW,CAAL,CAAY,CACR,GAAIsC,CAAAA,CAAW,CAAGvC,CAAO,CAAC,CAAD,CAAzB,CACA,GAAIuC,CAAJ,CAAiB,CACbA,CAAW,CAACL,MAAZ,EACH,CACJ,CAGD,GAAIzC,CAAM,EAAIZ,CAAd,CAA2B,IACnBuE,CAAAA,CAAQ,CAAG,kDAA+BqC,CAA/B,8BAAmErC,QAAnE,EADQ,CAEnBD,CAAQ,CAAGC,CAAQ,CAACC,MAAT,CAAgB,SAACC,CAAD,CAAIC,CAAJ,CAAgB,CAC3C,MAAOC,CAAAA,QAAQ,CAAC,cAAED,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAAD,CAAR,EAA0C+I,QAAQ,CAACR,CAAD,CAC5D,CAFc,CAFQ,CAKvBG,CAAQ,CAACpB,IAAT,CAAc,SAACuB,CAAD,CAAIC,CAAJ,CAAgB,CAC1B,GAAIE,CAAAA,CAAE,CAAG,cAAEF,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAAT,CACA,cAAE8I,CAAF,EAAW9I,IAAX,CAAgB,WAAhB,CAA6BgJ,CAAE,CAAG,CAAlC,CACH,CAHD,CAIH,CAED,GAAItD,CAAAA,CAAI,CAAG,cAAE,2CAA0CsF,CAA1C,CAAqD,kBAArD,CAAwExF,CAAxE,CACT,sBADS,CACc+C,CADd,CAC0B,WAD5B,CAAX,CAEA,GAAI6C,CAAJ,CAAc,CACV1F,CAAI,CAACmF,QAAL,CAAc,kBAAd,CACH,CACD,GAAIQ,CAAJ,CAAgB,CACZ3F,CAAI,CAACmF,QAAL,CAAc,wBAAd,CACH,CACD,GAAI,CAACO,CAAD,EAAa,CAACC,CAAlB,CAA8B,CAC1B3F,CAAI,CAACmF,QAAL,CAAc,kBAAd,CACH,CAED,GAAIS,CAAAA,CAAW,CAAG,cAAE,8CAAF,CAAlB,CACIrF,CAAW,CAAG,cAAE,yDAAuDgF,CAAO,CAAGA,CAAH,CAAa,EAA3E,EAAiF,QAAnF,CADlB,CAEIvD,CAAU,CAAG,cAAE,6CAAF,CAFjB,CAGI1B,CAAQ,CAAG,cAAE,sDAAoDkF,CAAO,CAAGA,CAAH,CAAa,EAAxE,EAA8E,QAAhF,CAHf,CAIIK,CAAY,CAAG,cAAE,6FAAF,CAJnB,CAKIC,CAAiB,CAAG,cAAE,yCAAF,CALxB,CAOAF,CAAW,CAACG,MAAZ,CAAmBxF,CAAnB,EACAqF,CAAW,CAACG,MAAZ,CAAmB/D,CAAnB,EACA4D,CAAW,CAACG,MAAZ,CAAmBzF,CAAnB,EACAsF,CAAW,CAACG,MAAZ,CAAmBF,CAAnB,EAEAD,CAAW,CAACG,MAAZ,CAAmBD,CAAnB,EACA9F,CAAI,CAAC+F,MAAL,CAAYH,CAAZ,EAhD4F,GAkDxFI,CAAAA,CAAa,CAAG,cAAE,4BAA8BV,CAA9B,CAAyC,yBAA3C,CAlDwE,CAoDxFW,CAAS,CAAG,UAAM,CAClB9D,CAAa,CAACrC,CAAD,CAChB,CAtD2F,CAwD5F,GAAIA,CAAJ,CAAW,CACP,GAAIT,CAAJ,CAAmB,CACfW,CAAI,CAACmF,QAAL,CAAc,wBAAd,EACA,GAAIe,CAAAA,CAAW,CAAG,mGAA0E1C,CAA1E,YAAlB,CAEArI,CAAY,CAAC+K,CAAD,CAAc,UAAM,CAC5B3C,CAAQ,CAACzD,CAAD,CACX,CAFW,CAAZ,CAGA8F,CAAW,CAACG,MAAZ,CAAmBG,CAAnB,CACH,CAED,GAAIP,CAAJ,CAAgB,CACZ,GAAIQ,CAAAA,CAAa,CAAG,cAAE,gGAAF,CAApB,CACAhL,CAAY,CAACgL,CAAD,CAAgB,UAAM,CAC9B7D,CAAU,CAACxC,CAAD,CACb,CAFW,CAAZ,CAIA8F,CAAW,CAACG,MAAZ,CAAmBI,CAAnB,EAEAzK,CAAoB,CAAC4E,CAAD,CAAW2F,CAAX,CAApB,CACAvK,CAAoB,CAAC6E,CAAD,CAAc0F,CAAd,CAApB,CACAvK,CAAoB,CAACsG,CAAD,CAAaiE,CAAb,CAApB,CAEAzB,CAAa,CAACxE,CAAD,CAAOyE,CAAP,CAChB,CAbD,IAaO,CACHG,CAAiB,CAAC5E,CAAD,CAAOyE,CAAP,CACpB,CAED,GAAI,CAAClE,CAAW,CAACvF,IAAZ,EAAL,CAAyB,CACrBuF,CAAW,CAAC2B,IAAZ,GACAF,CAAU,CAACE,IAAX,EACH,CACD,GAAI,CAAC5B,CAAQ,CAACtF,IAAT,EAAD,EAAoBuF,CAAW,CAACvF,IAAZ,EAAxB,CAA4C,CACxCsF,CAAQ,CAAC4B,IAAT,GACAF,CAAU,CAACE,IAAX,EACH,CAED,GAAIkE,CAAAA,CAAO,CAAGJ,CAAa,CAAC/F,IAAd,CAAmB,aAAnB,EAAkCoG,IAAlC,EAAd,CAEA,GAAID,CAAO,CAAC1F,MAAZ,CAAoB,CAChBV,CAAI,CAACsG,WAAL,CAAiBF,CAAjB,CACH,CAFD,IAEO,CACHJ,CAAa,CAACO,OAAd,CAAsBvG,CAAtB,CACH,CACJ,CA5CD,IA4CO,CACH,cAAE,4BAA8BsF,CAA9B,CAAyC,4BAA3C,EAAyES,MAAzE,CAAgF/F,CAAhF,EAEAA,CAAI,CAACkC,IAAL,GACA+D,CAAS,EACZ,CACJ,CAlqB8C,CA4qB3CO,EAAS,CAAG,SAAU1G,CAAV,CAAiB2G,CAAjB,CAAuBC,CAAvB,CAA8BC,CAA9B,CAAsC,IAC9CC,CAAAA,CAAW,2CAAqCD,CAArC,MADmC,CAE9ChB,CAAU,CAAG9G,CAFiC,CAG9CgI,CAAS,CAAG,IAHkC,CAI9CpF,CAAM,CAAG,yEAAoDmF,CAApD,0BAA+E9G,CAA/E,cAJqC,CAK9CgH,CAAY,CAAG,cAAE,2CAAF,CAL+B,CAM9CC,CAAU,CAAG,cAAE,gDAAF,CANiC,CAO9CC,CAAU,CAAG,cAAE,yFAAmFP,CAAnF,CAA0F,QAA5F,CAPiC,CAQ9CT,CAAa,CAAG,cAAE,4CAAF,CAR8B,CAS9CiB,CAAgB,CAAG,cAAE,+CAAF,CAT2B,CAWlD,GAAI3H,CAAM,EAAIZ,CAAd,CAA2B,CACvBoI,CAAY,CAACf,MAAb,CAAoBgB,CAApB,CACH,CACDD,CAAY,CAACf,MAAb,CAAoBiB,CAApB,EAEA,GAAIhL,CAAO,CAACkL,WAAZ,CAAyB,CACrBF,CAAU,CAAC7B,QAAX,CAAoB,QAApB,CACH,CAED4B,CAAU,CAAC1L,EAAX,CAAc,OAAd,CAAuB,UAAW,CAC9BqI,EAAS,CAACsC,CAAD,IACZ,CAFD,EAIA,GAAIL,CAAJ,CAAgB,CACZlE,CAAM,CAAC0D,QAAP,CAAgB,0BAAhB,EAEA,GAAIgB,CAAAA,CAAa,CAAG,cAAE,kGAAF,CAApB,CACAhL,CAAY,CAACgL,CAAD,CAAgB,UAAM,CAC9B1L,UAAa8H,OAAb,CACIrG,CAAO,CAACM,mBADZ,CAEI,iBAAU,oBAAV,CAAgC,WAAhC,CAA6C2K,EAAa,CAACrH,CAAD,CAA1D,CAFJ,CAGI5D,CAAO,CAACY,MAHZ,CAIIZ,CAAO,CAACa,MAJZ,CAKI,UAAW,CACPyC,CAAW,CAAC,eAAD,CAAkB,CAACgD,EAAE,CAAE1C,CAAL,CAAlB,CAA+B,SAAS2C,CAAT,CAAiB,CACvD,GAAIA,CAAM,CAACC,MAAX,CAAmB,CACfjB,CAAM,CAACM,MAAP,GACAnD,CAAa,CAAG6D,CAAM,CAACE,SAC1B,CACJ,CALU,CAMd,CAZL,CAcH,CAfW,CAAZ,CAiBAmE,CAAY,CAACf,MAAb,CAAoBI,CAApB,CACH,CAED1E,CAAM,CAACsE,MAAP,CAAce,CAAd,EACArF,CAAM,CAACsE,MAAP,CAAcC,CAAd,EACAvE,CAAM,CAACsE,MAAP,CAAckB,CAAd,EAEA,GAAItB,CAAJ,CAAgB,CACZjK,CAAoB,CAACsL,CAAD,CAAa,UAAW,CACxCH,CAAS,CAAGG,CAAU,CAAChM,IAAX,EACf,CAFmB,IAApB,CAIAgM,CAAU,CAAClL,QAAX,CAAoB,CAChBsL,cAAc,GADE,CAEhBC,YAAY,GAFI,CAGhBrN,QAAQ,CAAE,kBAASM,CAAT,CAAe,CACrB,GAAIA,CAAI,CAACkL,OAAT,CAAkB,CACdhG,CAAW,CAAC,eAAD,CAAkB,CAACgD,EAAE,CAAE1C,CAAL,CAAY2G,IAAI,CAAEO,CAAU,CAAChM,IAAX,EAAlB,CAAlB,CAAwD,SAASyH,CAAT,CAAiB,CAChF,GAAI,CAACA,CAAM,CAACC,MAAZ,CAAoB,CAChBsE,CAAU,CAAChM,IAAX,CAAgB6L,CAAhB,EACAA,CAAS,CAAG,IACf,CAHD,IAGO,CACHjI,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACApB,CAAgB,CAACzB,CAAD,CACnB,CACJ,CARU,CAQR,UAAW,CACVkH,CAAU,CAAChM,IAAX,CAAgB6L,CAAhB,EACAA,CAAS,CAAG,IACf,CAXU,CAYd,CAbD,IAaO,CACHG,CAAU,CAAChM,IAAX,CAAgB6L,CAAhB,EACAA,CAAS,CAAG,IACf,CACJ,CArBe,CAApB,CAuBH,CAED,GAAI,CAAC1H,CAAL,CAAsB,CAClB8H,CAAgB,CAAClB,MAAjB,CAAwB,qHACyB/J,CAAO,CAACsL,QADjC,CAC4C,wBADpE,EAGAnM,CAAY,CAAC8L,CAAgB,CAAChH,IAAjB,CAAsB,UAAtB,CAAD,CAAoC,UAAW,CACvDoF,EAAO,CAACvF,CAAD,CAAQ,CAAR,CAAW,IAAX,CAAiB,IAAjB,CAAuB,IAAvB,CAA6B,CAAC0C,EAAE,CAAEzD,CAAL,CAA7B,CAA2C,CAA3C,CAA8C,CAA9C,CACV,CAFW,CAGf,CAED,GAAIqH,CAAAA,CAAO,CAAG,cAAE,kCAAF,EAAsCC,IAAtC,EAAd,CACA,GAAID,CAAO,CAAC1F,MAAZ,CAAoB,CAChBe,CAAM,CAAC6E,WAAP,CAAmBF,CAAnB,CACH,CAFD,IAEO,CACH,cAAE,YAAF,EAAgBL,MAAhB,CAAuBtE,CAAvB,CACH,CAED,GAAIiF,CAAJ,CAAW,CACP,IAAK,GAAI7E,CAAAA,CAAT,GAAkB6E,CAAAA,CAAlB,CAAyB,CACrB,GAAI7D,CAAAA,CAAS,CAAa,CAAV,EAAAvD,CAAM,CAAQoH,CAAK,CAAC7E,CAAD,CAAL,CAAagB,SAArB,CAAiC6D,CAAK,CAAC7E,CAAD,CAAL,CAAa0F,WAApE,CACAlC,EAAO,CAACvF,CAAD,CAAQ4G,CAAK,CAAC7E,CAAD,CAAL,CAAaW,EAArB,CAAyBkE,CAAK,CAAC7E,CAAD,CAAL,CAAa0D,OAAtC,CAA+CmB,CAAK,CAAC7E,CAAD,CAAL,CAAa2D,OAA5D,CACH,CAACjK,IAAI,CAAEmL,CAAK,CAAC7E,CAAD,CAAL,CAAatG,IAApB,CAA0BwF,IAAI,CAAE2F,CAAK,CAAC7E,CAAD,CAAL,CAAad,IAA7C,CAAmD4D,GAAG,CAAE+B,CAAK,CAAC7E,CAAD,CAAL,CAAa8C,GAArE,CADG,CAEH,CAACnC,EAAE,CAAEkE,CAAK,CAAC7E,CAAD,CAAL,CAAa2F,MAAlB,CAFG,CAEwB3E,CAFxB,CAEmC6D,CAAK,CAAC7E,CAAD,CAAL,CAAa2B,MAFhD,CAGV,CACJ,CACDE,EAAS,CAACsC,CAAD,CAAT,CACAzE,CAAgB,CAACzB,CAAD,CAAhB,CACA,GAAIjB,CAAQ,EAAoB,CAAhB,EAAAC,CAAhB,CAAmC,CAC/B2I,EAAc,EACjB,CACJ,CA3xB8C,CAkyBzCN,EAAa,CAAG,SAAC3E,CAAD,CAAQ,CAC1B,MAAO,kDAA+BA,CAA/B,QAAuCvC,IAAvC,CAA4C,wBAA5C,EAAsEjF,IAAtE,EACV,CApyB8C,CA2yB3C0M,EAAkB,CAAG,UAAW,CAChC,GAAIjG,CAAAA,CAAM,CAAG,cAAE,uDAAF,CAAb,CACIkG,CAAO,GADX,CAEAlG,CAAM,CAACsE,MAAP,CAAc,qFACV7J,CAAO,CAACoB,cADE,CACe,aADf,CAC6BpB,CAAO,CAACoB,cADrC,CACsD,oDADtD,CAERtB,CAAO,CAAC4L,UAFA,CAEa,wBAF3B,EAIAzM,CAAY,CAACsG,CAAM,CAACxB,IAAP,CAAY,YAAZ,CAAD,CAA4B,UAAW,CAC/C,GAAI0H,CAAJ,CAAa,CACT,MACH,CACDA,CAAO,GAAP,CAEAnI,CAAW,CAAC,YAAD,CAAe,CAACqI,OAAO,CAAE9L,CAAK,CAACyG,EAAhB,CAAoBiE,IAAI,CAAEvK,CAAO,CAACC,sBAAlC,CAAf,CAA0E,SAASsG,CAAT,CAAiB,CAClG+D,EAAS,CAAC/D,CAAM,CAACD,EAAR,CAAYtG,CAAO,CAACC,sBAApB,CAA4C,EAA5C,CAAgD2L,EAAmB,EAAnE,CAAT,CACAlJ,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACAgF,CAAO,GACV,CAJU,CAIR,UAAW,CACVA,CAAO,GACV,CANU,CAOd,CAbW,CAAZ,CAeA,cAAE,YAAF,EAAgB5B,MAAhB,CAAuBtE,CAAvB,CACH,CAl0B8C,CA00BzCqG,EAAmB,CAAG,UAAM,IAC1BC,CAAAA,CAAQ,CAAG,cAAE,eAAF,EAAmBrH,MAAnB,CAA4B,CADb,CAE1BsH,CAAW,CAAGhM,CAAO,CAACiM,OAAR,CAAgBvH,MAFJ,CAG9B,MAAO1E,CAAAA,CAAO,CAACiM,OAAR,CAAgBF,CAAQ,CAAGC,CAA3B,CACV,CA90B8C,CAw1B3CE,EAAU,CAAG,SAASlI,CAAT,CAAeuF,CAAf,CAAwBjL,CAAxB,CAA8B,IACvCiG,CAAAA,CAAW,CAAGL,CAAqB,CAACF,CAAD,CADI,CAEvCM,CAAQ,CAAGP,CAAkB,CAACC,CAAD,CAFU,CAGvCgC,CAAU,CAAG7B,CAAoB,CAACH,CAAD,CAHM,CAK3CM,CAAQ,CAACtF,IAAT,CAAcV,CAAI,CAACkL,OAAnB,EACAjF,CAAW,CAACvF,IAAZ,CAAiBV,CAAI,CAACiL,OAAtB,EACAf,CAAa,CAACxE,CAAD,CAAO1F,CAAI,CAACmK,UAAZ,CAAb,CACAzD,CAAc,CAAC1G,CAAI,CAACkI,EAAN,CAAd,CAGAjC,CAAW,CAAC0B,IAAZ,GACAD,CAAU,CAACC,IAAX,GACA3B,CAAQ,CAAC2B,IAAT,GACA,GAAI,CAAC1B,CAAW,CAACvF,IAAZ,EAAL,CAAyB,CACrBuF,CAAW,CAAC2B,IAAZ,GACAF,CAAU,CAACE,IAAX,EACH,CACD,GAAI,CAAC5B,CAAQ,CAACtF,IAAT,EAAD,EAAoBuF,CAAW,CAACvF,IAAZ,EAAxB,CAA4C,CACxCsF,CAAQ,CAAC4B,IAAT,GACAF,CAAU,CAACE,IAAX,EACH,CACJ,CA92B8C,CAq3B3CiG,EAAmB,CAAG,UAAW,CACjC3I,CAAW,CAAC,eAAD,CAAkB,CAACgD,EAAE,CAAEzG,CAAK,CAACyG,EAAX,CAAe4F,KAAK,CAAExJ,CAAtB,CAAlB,CAAwD,SAASyJ,CAAT,CAAuB,CACtF,IAAK,GAAIxG,CAAAA,CAAT,GAAkBwG,CAAAA,CAAlB,CAAgC,CAC5B,GAAIC,CAAAA,CAAI,CAAGD,CAAY,CAACxG,CAAD,CAAvB,CACA,GAAIyG,CAAI,CAACT,OAAL,EAAgB9L,CAAK,CAACyG,EAA1B,CAA8B,CAC1B,QACH,CAED,GAAIlI,CAAAA,CAAI,CAAGiO,IAAI,CAACC,KAAL,CAAWF,CAAI,CAAC9C,OAAhB,CAAX,CACA,GAAmB,UAAf,EAAA8C,CAAI,CAACG,MAAT,CAA+B,CAC3B,GAAI5F,CAAAA,CAAS,CAAa,CAAV,EAAAvD,CAAM,CAAQhF,CAAI,CAACuI,SAAb,CAAyBvI,CAAI,CAACiN,WAApD,CACAlC,EAAO,CAAC/K,CAAI,CAACgL,QAAN,CAAgBhL,CAAI,CAACkI,EAArB,CAAyBlI,CAAI,CAACiL,OAA9B,CAAuCjL,CAAI,CAACkL,OAA5C,CAAqDlL,CAAI,CAACmK,UAA1D,CACH,CAACjC,EAAE,CAAE8F,CAAI,CAACd,MAAV,CADG,CACgB3E,CADhB,CAC2BvI,CAAI,CAACkJ,MADhC,CAAP,CAEAxC,CAAc,CAAC1G,CAAI,CAACkI,EAAN,CAAd,CACAkB,EAAS,CAAC,cAAE,4BAA8BpJ,CAAI,CAACgL,QAAnC,CAA8C,yBAAhD,CAAD,CACZ,CAND,IAMO,IAAmB,aAAf,EAAAgD,CAAI,CAACG,MAAT,CAAkC,aACrC,GAAIzI,CAAAA,CAAI,CAAGH,CAAO,CAACvF,CAAI,CAACkI,EAAN,CAAlB,CACIkG,CAAS,CAAGnJ,CADhB,CAGA,GAAIS,CAAJ,CAAU,CACN,GAAIO,CAAAA,CAAW,CAAGL,CAAqB,CAACF,CAAD,CAAvC,CAEA,GAAId,CAAW,EAAI5E,CAAI,CAACkI,EAAxB,CAA4B,CACxB/H,UAAa8H,OAAb,CACIrG,CAAO,CAACO,kBADZ,CAEIP,CAAO,CAACQ,iBAFZ,CAGIR,CAAO,CAACW,EAHZ,CAIIX,CAAO,CAACa,MAJZ,CAKI,UAAW,CACP2L,CAAS,CAACxG,IAAV,GACAgG,EAAU,CAAClI,CAAD,CAAOO,CAAP,CAZRjG,CAYQ,CAAV,CACAwH,CAAY,EACf,CATL,CAWH,CAZD,IAYO,CACHoG,EAAU,CAAClI,CAAD,CAAOO,CAAP,CAAoBjG,CAApB,CACb,CACJ,CAtBoC,IAuBxC,CAvBM,IAuBA,IAAmB,aAAf,EAAAgO,CAAI,CAACG,MAAT,CAAkC,CACrC,GAAIvJ,CAAW,EAAI5E,CAAI,CAACkI,EAAxB,CAA4B,CACxB/H,UAAakO,KAAb,CAAmBzM,CAAO,CAACc,OAA3B,CAAoCd,CAAO,CAACS,iBAA5C,EACAmF,CAAY,EACf,CACD,GAAI9B,CAAAA,CAAI,CAAGH,CAAO,CAACvF,CAAI,CAACkI,EAAN,CAAlB,CACA,GAAIlD,CAAM,EAAIZ,CAAd,CAA2B,IACnBkE,CAAAA,CAAQ,CAAG5C,CAAI,CAAC1F,IAAL,CAAU,QAAV,CADQ,CAEnBuI,CAAS,CAAG7C,CAAI,CAAC1F,IAAL,CAAU,WAAV,CAFO,CAGvBwI,CAAe,CAACF,CAAD,CAAWC,CAAX,CAClB,CACD7C,CAAI,CAAC+B,MAAL,EAEH,CAbM,IAaA,IAAmB,YAAf,EAAAuG,CAAI,CAACG,MAAT,CAAiC,CACpCjC,EAAS,CAAClM,CAAI,CAACkI,EAAN,CAAUlI,CAAI,CAACmM,IAAf,CAAqB,EAArB,CAAyBqB,EAAmB,EAA5C,CACZ,CAFM,IAEA,IAAmB,eAAf,EAAAQ,CAAI,CAACG,MAAT,CAAoC,CACvC,cAAE,6BAA+BnO,CAAI,CAACkI,EAApC,CAAyC,2BAA3C,EAAwExH,IAAxE,CAA6EV,CAAI,CAACmM,IAAlF,EACAlF,CAAgB,CAACjH,CAAI,CAACkI,EAAN,CACnB,CAHM,IAGA,IAAmB,eAAf,EAAA8F,CAAI,CAACG,MAAT,CAAoC,CACvC,GAAIhH,CAAAA,CAAM,CAAG,cAAE,6BAA+BnH,CAAI,CAACkI,EAApC,CAAyC,IAA3C,CAAb,CACA,GAAItD,CAAW,EAAIuC,CAAM,CAACxB,IAAP,CAAY,4BAA6Bf,CAA7B,CAA2C,KAAvD,EAA6DwB,MAAhF,CAAwF,CACpFoB,CAAY,EACf,CACDL,CAAM,CAACM,MAAP,EACH,CANM,IAMA,IAAmB,WAAf,EAAAuG,CAAI,CAACG,MAAT,CAAgC,CACnC,GAAIzI,CAAAA,CAAI,CAAGH,CAAO,CAACvF,CAAI,CAACkI,EAAN,CAAlB,CACAxC,CAAI,CAACC,IAAL,CAAU,mBAAV,EAA+BjF,IAA/B,CAAoCV,CAAI,CAACkJ,MAAzC,EACA,GAAIlE,CAAM,EAAIb,CAAd,CAA6B,CACzBiF,EAAS,CAAC1D,CAAI,CAACmB,OAAL,CAAa,uBAAb,CAAD,CACZ,CACJ,CACDvC,CAAa,CAAG0J,CAAI,CAAC9F,EACxB,CAED5C,EAAW,EACd,CAxEU,CAyEd,CA/7B8C,CAu8B3CA,EAAW,CAAG,SAASgJ,CAAT,CAAkB,CAChC,GAAIA,CAAJ,CAAa,CACTT,EAAmB,EACtB,CAFD,IAEO,IAA8B,CAA1B,CAAAnM,CAAO,CAAC6M,eAAZ,CAAiC,CACpC,GAAIlK,CAAJ,CAAiB,CACbc,EAAY,EACf,CACDd,CAAW,CAAGmK,UAAU,CAACX,EAAD,CAAgD,GAA1B,CAAAnM,CAAO,CAAC6M,eAA9B,CAC3B,CACJ,CAh9B8C,CAu9B3CpJ,EAAY,CAAG,UAAW,CAC1BsJ,YAAY,CAACpK,CAAD,CAAZ,CACAA,CAAW,CAAG,IACjB,CA19B8C,CAm+B3C+E,EAAS,CAAG,SAAS8B,CAAT,CAAkBwD,CAAlB,CAA0B,CACtC,GAAIC,CAAAA,CAAO,CAAG,cAAEzD,CAAF,EAAW0D,MAAX,GAAoBjJ,IAApB,CAAyB,wBAAzB,CAAd,CACIkJ,CAAS,CAAG,cAAE3D,CAAF,EAAWlL,IAAX,CAAgB,MAAhB,CADhB,CAEA,GAAI,CAAC6O,CAAL,CAAgB,CACZ,GAAI7J,CAAM,EAAIb,CAAd,CAA6B,CACzB0K,CAAS,CAAG,MACf,CAFD,IAEO,CACHA,CAAS,CAAG,KACf,CACJ,CACD,GAAIH,CAAJ,CAAY,CACRG,CAAS,CAAgB,KAAb,EAAAA,CAAS,CAAY,MAAZ,CAAqB,KAC7C,CAED,GAAiB,KAAb,EAAAA,CAAJ,CAAwB,CACpBF,CAAO,CAAC7D,WAAR,CAAoB,eAApB,EACA6D,CAAO,CAAC9D,QAAR,CAAiB,aAAjB,CACH,CAHD,IAGO,CACH8D,CAAO,CAAC7D,WAAR,CAAoB,aAApB,EACA6D,CAAO,CAAC9D,QAAR,CAAiB,eAAjB,CACH,CACD,cAAEK,CAAF,EAAWlL,IAAX,CAAgB,MAAhB,CAAwB6O,CAAxB,EAEA,GAAIC,CAAAA,CAAJ,CACIC,CADJ,CAEA,GAAI/J,CAAM,EAAId,CAAd,CAA2B,CACvB4K,CAAI,CAAG,SAASE,CAAT,CAAYC,CAAZ,CAAe,CAClB,MAAO,cAAEA,CAAF,EAAKjP,IAAL,CAAU,WAAV,EAAyB,cAAEgP,CAAF,EAAKhP,IAAL,CAAU,WAAV,CACnC,CAFD,CAGA+O,CAAG,CAAG,SAASC,CAAT,CAAYC,CAAZ,CAAe,CACjB,MAAO,cAAED,CAAF,EAAKhP,IAAL,CAAU,WAAV,EAAyB,cAAEiP,CAAF,EAAKjP,IAAL,CAAU,WAAV,CACnC,CACJ,CAPD,IAOO,IAAIgF,CAAM,EAAIb,CAAd,CAA6B,CAChC2K,CAAI,CAAG,SAASE,CAAT,CAAYC,CAAZ,CAAe,CAClB,MAAO,cAAEA,CAAF,EAAKtJ,IAAL,CAAU,mBAAV,EAA+BlF,IAA/B,GAAwC,cAAEuO,CAAF,EAAKrJ,IAAL,CAAU,mBAAV,EAA+BlF,IAA/B,EAAxC,EACP,cAAEwO,CAAF,EAAKjP,IAAL,CAAU,WAAV,EAAyB,cAAEgP,CAAF,EAAKhP,IAAL,CAAU,WAAV,CAC5B,CAHD,CAIA+O,CAAG,CAAG,SAASC,CAAT,CAAYC,CAAZ,CAAe,CACjB,MAAO,cAAED,CAAF,EAAKrJ,IAAL,CAAU,mBAAV,EAA+BlF,IAA/B,GAAwC,cAAEwO,CAAF,EAAKtJ,IAAL,CAAU,mBAAV,EAA+BlF,IAA/B,EAAxC,EACP,cAAEuO,CAAF,EAAKhP,IAAL,CAAU,WAAV,EAAyB,cAAEiP,CAAF,EAAKjP,IAAL,CAAU,WAAV,CAC5B,CACJ,CATM,IASA,IAAIgF,CAAM,EAAIZ,CAAd,CAA2B,CAC9B,GAAI8K,CAAAA,CAAY,CAAG,SAACF,CAAD,CAAIC,CAAJ,CAAU,CACzB,MAAO,cAAED,CAAF,EAAKhP,IAAL,CAAU,WAAV,EAAyB,cAAEiP,CAAF,EAAKjP,IAAL,CAAU,WAAV,CACnC,CAFD,CAGA,cAAE,eAAF,CAAmB,cAAEkL,CAAF,CAAnB,EAA+BiE,IAA/B,CAAoCD,CAApC,EAAkDE,QAAlD,CAA2D,cAAElE,CAAF,CAA3D,EACA,MACH,CAED,cAAE,eAAF,CAAmB,cAAEA,CAAF,CAAnB,EAA+BiE,IAA/B,CAAkD,KAAd,GAAAN,CAAS,CAAaE,CAAb,CAAmBD,CAAhE,EAAsEM,QAAtE,CAA+E,cAAElE,CAAF,CAA/E,CAEH,CAthC8C,CA6hC3CiC,EAAc,CAAG,UAAW,CAC5B,GAAIkC,CAAAA,CAAJ,CACA,cAAE,uBAAF,EAA2BC,QAA3B,CAAoC,CAChCC,WAAW,CAAE,uBADmB,CAEhCC,MAAM,CAAE,mBAFwB,CAGhCC,KAAK,CAAE,eAAS5G,CAAT,CAAY6G,CAAZ,CAAgB,CACnBL,CAAY,CAAG,cAAEK,CAAE,CAAC1B,IAAL,EAAWnH,OAAX,CAAmB,eAAnB,EAAoC7G,IAApC,CAAyC,OAAzC,CAClB,CAL+B,CAMhC2P,IAAI,CAAE,cAAS9G,CAAT,CAAY6G,CAAZ,CAAgB,IACdhK,CAAAA,CAAI,CAAG,cAAEgK,CAAE,CAAC1B,IAAL,CADO,CAEd4B,CAAQ,CAAGlK,CAAI,CAACmB,OAAL,CAAa,eAAb,CAFG,CAGd/F,CAAI,CAAG,cAAE,IAAF,CAHO,CAId+O,CAAM,CAAGnK,CAAI,CAAC1F,IAAL,CAAU,OAAV,CAJK,CAKdgL,CAAQ,CAAG4E,CAAQ,CAAC5P,IAAT,CAAc,OAAd,CALG,CAMd8P,CAAc,CAAGF,CAAQ,CAACjK,IAAT,CAAc,uBAAd,EAAuCgD,QAAvC,EANH,CAOdJ,CAAS,CAAGuH,CAAc,CAACvI,KAAf,CAAqB,+CAA4BsI,CAA5B,MAArB,CAPE,CAQdE,CAAO,CAAG,CACV7H,EAAE,CAAE2H,CADM,CAEV7E,QAAQ,CAAEA,CAFA,CAGVzC,SAAS,CAAEA,CAHD,CARI,CAalByH,EAAgB,CAACX,CAAD,CAAeU,CAAO,CAAC/E,QAAvB,CAAiC+E,CAAO,CAAC7H,EAAzC,CAA6C6H,CAAO,CAACxH,SAArD,CAAhB,CACArD,CAAW,CAAC,WAAD,CAAc6K,CAAd,CAAuB,SAAC5H,CAAD,CAAY,CAC1C,GAAIA,CAAM,CAACC,MAAX,CAAmB,CACf9D,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACA3B,CAAc,CAACqJ,CAAO,CAAC7H,EAAT,CAAd,CACAkB,EAAS,CAAC,iDAA8B2G,CAAO,CAAC/E,QAAtC,4BAAD,CACZ,CAJD,IAIO,CACHlK,CAAI,CAACwO,QAAL,CAAc,QAAd,CACH,CACJ,CARU,CASd,CA7B+B,CAApC,CA+BH,CA9jC8C,CAykCzCU,EAAgB,CAAG,SAACX,CAAD,CAAeY,CAAf,CAA2BC,CAA3B,CAAmCC,CAAnC,CAAoD,IACrEC,CAAAA,CAAQ,CAAG,iDAA8BH,CAA9B,4BAD0D,CAErEI,CAAS,CAAG,+CAA4BH,CAA5B,MAFyD,CAGrEI,CAAY,CAAGD,CAAS,CAACrQ,IAAV,CAAe,WAAf,CAHsD,CAMrEuQ,CAAU,CAAGH,CAAQ,CAACzH,QAAT,EANwD,CAOzE,GAAI0G,CAAY,EAAIY,CAApB,CAAgC,CAC5BM,CAAU,CAACjJ,IAAX,CAAgB,SAACuB,CAAD,CAAInD,CAAJ,CAAa,CACzB,GAAI8K,CAAAA,CAAS,CAAG,cAAE9K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAAhB,CACA,GAAIsQ,CAAY,CAAGH,CAAnB,CAAiC,CAC7B,GAAIK,CAAS,EAAIL,CAAb,EAA6BK,CAAS,EAAIF,CAA9C,CAA4D,CACxD,cAAE5K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAA0BwQ,CAAS,CAAG,CAAtC,CACH,CACJ,CAJD,IAIO,IAAIF,CAAY,CAAGH,CAAnB,CAAiC,CACpC,GAAIK,CAAS,EAAIL,CAAb,EAA6BK,CAAS,EAAIF,CAA9C,CAA4D,CACxD,cAAE5K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAA0BwQ,CAAS,CAAG,CAAtC,CACH,CACJ,CACJ,CAXD,CAYH,CAbD,IAaO,IACCC,CAAAA,CAAU,CAAG,iDAA8BpB,CAA9B,4BADd,CAECqB,CAAY,CAAGD,CAAU,CAAC9H,QAAX,EAFhB,CAGH4H,CAAU,CAACjJ,IAAX,CAAgB,SAACuB,CAAD,CAAInD,CAAJ,CAAa,CACzB,GAAI8K,CAAAA,CAAS,CAAG,cAAE9K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAAhB,CACA,GAAIwQ,CAAS,EAAIL,CAAjB,CAA+B,CAC3B,cAAEzK,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAA0BwQ,CAAS,CAAG,CAAtC,CACH,CACJ,CALD,EAMAE,CAAY,CAACpJ,IAAb,CAAkB,SAACuB,CAAD,CAAInD,CAAJ,CAAa,CAC3B,GAAI8K,CAAAA,CAAS,CAAG,cAAE9K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAAhB,CACA,GAAIwQ,CAAS,CAAGF,CAAhB,CAA8B,CAC1B,cAAE5K,CAAF,EAAQ1F,IAAR,CAAa,WAAb,CAA0BwQ,CAAS,CAAG,CAAtC,CACH,CACJ,CALD,CAMH,CACDH,CAAS,CAACrQ,IAAV,CAAe,WAAf,CAA4BmQ,CAA5B,CACH,CA9mC8C,CAunC3CQ,EAAO,CAAG,SAASd,CAAT,CAAiB7E,CAAjB,CAA2B,CAGrC,MAAO4F,WAASC,YAAT,CAAsB,WAAtB,CAAmC,WAAnC,CAAgDlP,CAAhD,CADM,CAACkO,MAAM,CAAEA,CAAT,CAAiB7E,QAAQ,CAAEA,CAA3B,CACN,CACV,CA3nC8C,CAmoC3C8F,EAAe,CAAG,SAASpL,CAAT,CAAeqL,CAAf,CAAsB,CACxC,GAAInK,CAAAA,CAAgB,CAAGlB,CAAI,CAACmB,OAAL,CAAa,eAAb,EAA8BlB,IAA9B,CAAmC,wBAAnC,EAA6DlF,IAA7D,EAAvB,CACIuQ,CADJ,CAEIC,CAFJ,CAGIC,CAHJ,CAIIC,CAJJ,CAKIC,CALJ,CAMIC,CAAS,CAAGN,CAAK,CAACxH,OAAN,EANhB,CAQA,GAAI7D,CAAI,CAAC1F,IAAL,CAAU,OAAV,CAAJ,CAAwB,CAEpB,GAAI8G,CAAAA,CAAc,CAAGf,CAAqB,CAACL,CAAD,CAA1C,CAEAyL,CAAU,CAAGvP,CAAO,CAAC2B,aAAR,CAAsB8C,OAAtB,CAA8B,UAA9B,CAA0CO,CAA1C,EAA4DP,OAA5D,CAAoE,QAApE,CAA8ES,CAA9E,CAAb,CACAsK,CAAY,CAAGxP,CAAO,CAAC4B,eAAR,CAAwB6C,OAAxB,CAAgC,UAAhC,CAA4CO,CAA5C,EAA8DP,OAA9D,CAAsE,QAAtE,CAAgFS,CAAhF,CAAf,CACAkK,CAAU,CAAGpP,CAAO,CAACwB,aAAR,CAAsBiD,OAAtB,CAA8B,QAA9B,CAAwCzE,CAAO,CAACiB,cAAhD,EAAgEwD,OAAhE,CAAwE,UAAxE,CACTO,CADS,EACSP,OADT,CACiB,QADjB,CAC2BS,CAD3B,CAAb,CAEAmK,CAAQ,CAAGrP,CAAO,CAACwB,aAAR,CAAsBiD,OAAtB,CAA8B,QAA9B,CAAwCzE,CAAO,CAACkB,YAAhD,EAA8DuD,OAA9D,CAAsE,UAAtE,CACPO,CADO,EACWP,OADX,CACmB,QADnB,CAC6BS,CAD7B,CAAX,CAEAoK,CAAO,CAAGtP,CAAO,CAACwB,aAAR,CAAsBiD,OAAtB,CAA8B,QAA9B,CAAwCzE,CAAO,CAACmB,WAAhD,EAA6DsD,OAA7D,CAAqE,UAArE,CACNO,CADM,EACYP,OADZ,CACoB,QADpB,CAC8BS,CAD9B,CAEb,CAZD,IAYO,CAEHqK,CAAU,CAAGvP,CAAO,CAAC6B,YAAR,CAAqB4C,OAArB,CAA6B,UAA7B,CAAyCO,CAAzC,CAAb,CACAwK,CAAY,CAAGxP,CAAO,CAAC8B,cAAR,CAAuB2C,OAAvB,CAA+B,UAA/B,CAA2CO,CAA3C,CAAf,CACAoK,CAAU,CAAGpP,CAAO,CAACyB,gBAAR,CAAyBgD,OAAzB,CAAiC,QAAjC,CAA2CzE,CAAO,CAACiB,cAAnD,EAAmEwD,OAAnE,CAA2E,UAA3E,CACTO,CADS,CAAb,CAEAqK,CAAQ,CAAGrP,CAAO,CAACyB,gBAAR,CAAyBgD,OAAzB,CAAiC,QAAjC,CAA2CzE,CAAO,CAACkB,YAAnD,EAAiEuD,OAAjE,CAAyE,UAAzE,CAAqFO,CAArF,CAAX,CACAsK,CAAO,CAAGtP,CAAO,CAACyB,gBAAR,CAAyBgD,OAAzB,CAAiC,QAAjC,CAA2CzE,CAAO,CAACmB,WAAnD,EAAgEsD,OAAhE,CAAwE,UAAxE,CAAoFO,CAApF,CACb,CAED,GAAIlC,CAAc,EAAIV,CAAtB,CAA+C,CAC3CqN,CAAS,CAAC1L,IAAV,CAAe,6CAAf,EAA8DqB,IAA9D,CAAmE,YAAnE,CAAiFgK,CAAjF,EACAK,CAAS,CAAC1L,IAAV,CAAe,6CAAf,EAA8DqB,IAA9D,CAAmE,OAAnE,CAA4EgK,CAA5E,EACAK,CAAS,CAAC1L,IAAV,CAAe,2CAAf,EAA4DqB,IAA5D,CAAiE,YAAjE,CAA+EiK,CAA/E,EACAI,CAAS,CAAC1L,IAAV,CAAe,2CAAf,EAA4DqB,IAA5D,CAAiE,OAAjE,CAA0EiK,CAA1E,EACAI,CAAS,CAAC1L,IAAV,CAAe,0CAAf,EAA2DqB,IAA3D,CAAgE,YAAhE,CAA8EkK,CAA9E,EACAG,CAAS,CAAC1L,IAAV,CAAe,0CAAf,EAA2DqB,IAA3D,CAAgE,OAAhE,CAAyEkK,CAAzE,CACH,CAED,GAAII,CAAAA,CAAM,CAAGD,CAAS,CAAC1L,IAAV,CAAeoL,CAAK,CAACQ,iBAAN,CAAwB,MAAxB,CAAf,CAAb,CACA,GAAID,CAAJ,CAAY,CACRA,CAAM,CAACtK,IAAP,CAAY,YAAZ,CAA0BmK,CAA1B,CACH,CACDG,CAAM,CAAGD,CAAS,CAAC1L,IAAV,CAAeoL,CAAK,CAACQ,iBAAN,CAAwB,QAAxB,CAAf,CAAT,CACA,GAAID,CAAJ,CAAY,CACRA,CAAM,CAACtK,IAAP,CAAY,YAAZ,CAA0BoK,CAA1B,CACH,CACJ,CAnrC8C,CA0rC3CrJ,EAAa,CAAG,SAASrC,CAAT,CAAe,CAC/B,GAAIiB,CAAAA,CAAM,CAAG,CAAb,CACIO,CAAQ,CAAGxB,CAAI,CAAC1F,IAAL,CAAU,QAAV,CADf,CAEImH,CAAM,CAAG,cAAE,4BAA8BD,CAA9B,CAAyC,GAA3C,CAFb,CAGIN,CAAgB,CAAGO,CAAM,CAACxB,IAAP,CAAY,wBAAZ,EAAsClF,IAAtC,EAHvB,CAII+Q,CAJJ,CAMA,GAAI9L,CAAI,CAAC1F,IAAL,CAAU,OAAV,CAAJ,CAAwB,CACpB2G,CAAM,CAAGjB,CAAI,CAAC1F,IAAL,CAAU,OAAV,CAAT,CACAwR,CAAK,CAAG5P,CAAO,CAACgB,gBAAR,CAAyByD,OAAzB,CAAiC,UAAjC,CAA6CO,CAA7C,CACX,CAHD,IAGO,CACH4K,CAAK,CAAG5P,CAAO,CAACe,eAAR,CAAwB0D,OAAxB,CAAgC,UAAhC,CAA4CO,CAA5C,CACX,CAED6K,UAAaC,MAAb,CAAoB,CAChBzQ,IAAI,CAAEwQ,UAAaE,KAAb,CAAmBC,WADT,CAEhBJ,KAAK,CAAEA,CAFS,CAGhBK,IAAI,CAAElB,EAAO,CAAChK,CAAD,CAASO,CAAT,CAHG,CAIhB4K,KAAK,GAJW,CAKhBC,aAAa,GALG,CAApB,EAMG1I,IANH,CAMQ,SAAS0H,CAAT,CAAgB,CAEpBA,CAAK,CAACiB,cAAN,GAAuB3I,IAAvB,CAA4B,UAAY,CACpC,GAAI4I,CAAAA,CAAc,GAAlB,CACAhN,CAAS,CAAG8L,CAAZ,CACAA,CAAK,CAACmB,QAAN,GACAnB,CAAK,CAACoB,iBAAN,CAAwBvQ,CAAO,CAACE,gBAAhC,EACAiP,CAAK,CAACqB,aAAN,CAAoB,QAApB,CAA8BxQ,CAAO,CAACG,kBAAtC,EAEAgP,CAAK,CAACxH,OAAN,GAAgBxI,EAAhB,CAAmByI,UAAYC,MAA/B,CAAuC,UAAY,CAC/CjC,CAAY,GACZ,GAAI,CAAC9B,CAAI,CAAC1F,IAAL,CAAU,OAAV,CAAL,CAAyB,CACrB0F,CAAI,CAAC+B,MAAL,EACH,CACJ,CALD,EAOAsJ,CAAK,CAACxH,OAAN,GAAgBxI,EAAhB,CAAmByI,UAAY6I,IAA/B,CAAqC,SAAUrR,CAAV,CAAa,CAC9CA,CAAC,CAACG,cAAF,GACA4P,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,MAArB,EAA6B2M,MAA7B,EACH,CAHD,EAKA,GAAIC,CAAAA,CAAW,CAAGC,QAAQ,CAACC,WAAT,CAAqB,YAArB,CAAlB,CACAF,CAAW,CAACG,SAAZ,CAAsB,QAAtB,QAEA3B,CAAK,CAACxH,OAAN,GAAgBxI,EAAhB,CAAmB,QAAnB,CAA6B,MAA7B,CAAqC,SAAUC,CAAV,CAAa,CAC9CA,CAAC,CAACG,cAAF,GAGA,GAAI8Q,CAAJ,CAAoB,CAChB,MACH,CACDA,CAAc,GAAd,CAGA,GAAIU,CAAAA,CAAK,CAAG5B,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,MAArB,EAA6BiN,GAA7B,CAAiC,CAAjC,EAAoCC,cAApC,EAAZ,CACA,GAAI,CAACF,CAAL,CAAY,CACR,MACH,CAMD5B,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,QAArB,EAA+B2B,IAA/B,CAAoC,SAAUC,CAAV,CAAiBuB,CAAjB,CAA0B,CAC1DA,CAAO,CAACgK,aAAR,CAAsBP,CAAtB,CACH,CAFD,EAKA,GAAIQ,CAAAA,CAAO,CAAGC,UAAEC,KAAF,CACVlC,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,yBAArB,CADU,CAEVoL,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,QAArB,CAFU,CAGVoL,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,UAArB,CAHU,CAAd,CAOA,GAAIoN,CAAO,CAAC3M,MAAZ,CAAoB,CAChB2M,CAAO,CAACG,KAAR,GAAgBC,KAAhB,GACA,MACH,CAED,GAAIC,CAAAA,CAAQ,CAAGnF,IAAI,CAACoF,SAAL,CAAetC,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,MAArB,EAA6B2N,SAA7B,EAAf,CAAf,CACApO,CAAW,CAAC,aAAD,CAAgB,CAACvD,SAAS,CAAEA,CAAZ,CAAuB4R,YAAY,CAAEH,CAArC,CAAhB,CAAgE,SAAUjL,CAAV,CAAkB,CACzF,GAAIA,CAAM,CAACC,MAAX,CAAmB,CACf,GAAqB,QAAjB,EAAAD,CAAM,CAACgG,MAAX,CAA+B,CAE3B7J,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACA3C,CAAI,CAAC+B,MAAL,GACAsD,EAAO,CAAC7D,CAAD,CAAWiB,CAAM,CAACzC,IAAP,CAAYwC,EAAvB,CAA2BC,CAAM,CAACzC,IAAP,CAAYuF,OAAvC,CAAgD9C,CAAM,CAACzC,IAAP,CAAYwF,OAA5D,CACH,CAACjK,IAAI,CAAEkH,CAAM,CAACzC,IAAP,CAAYzE,IAAnB,CAAyBwF,IAAI,CAAE0B,CAAM,CAACzC,IAAP,CAAYe,IAA3C,CAAiD4D,GAAG,CAAElC,CAAM,CAACzC,IAAP,CAAY2E,GAAlE,CADG,CAEH,CAACnC,EAAE,CAAEC,CAAM,CAACzC,IAAP,CAAYwH,MAAjB,CAFG,CAEuB/E,CAAM,CAACzC,IAAP,CAAYuH,WAFnC,CAEgD9E,CAAM,CAACzC,IAAP,CAAYwD,MAF5D,CAAP,CAGAE,EAAS,CAAC,cAAE,4BAA8BlC,CAA9B,CAAyC,yBAA3C,CAAD,CAAT,CACAR,CAAc,CAACyB,CAAM,CAACzC,IAAP,CAAYwC,EAAb,CACjB,CATD,IASO,CAEH5D,CAAa,CAAG6D,CAAM,CAACE,SAAvB,CACA5C,CAAkB,CAACC,CAAD,CAAlB,CAAyBhF,IAAzB,CAA8ByH,CAAM,CAACzC,IAAP,CAAYwF,OAA1C,EACAtF,CAAqB,CAACF,CAAD,CAArB,CAA4BhF,IAA5B,CAAiCyH,CAAM,CAACzC,IAAP,CAAYuF,OAA7C,EACAvE,CAAc,CAACyB,CAAM,CAACzC,IAAP,CAAYwC,EAAb,CAAd,CACAgC,CAAa,CAACxE,CAAD,CAAO,CAChBzE,IAAI,CAAEkH,CAAM,CAACzC,IAAP,CAAYzE,IADF,CAEhBwF,IAAI,CAAE0B,CAAM,CAACzC,IAAP,CAAYe,IAFF,CAEQ4D,GAAG,CAAElC,CAAM,CAACzC,IAAP,CAAY2E,GAFzB,CAAP,CAIhB,CACD7C,CAAY,GAGZgM,CAAC,CAACC,GAAF,CAAM,+BAAN,CAAuC,UAAW,CAC9CC,CAAC,CAACC,sBAAF,CAAyBC,sBAAzB,EACH,CAFD,EAIA7C,CAAK,CAAC8C,OAAN,EACH,CAGJ,CAjCU,CAmCd,CAxED,EA0EA,GAAInP,CAAc,EAAIV,CAAtB,CAA+C,CAE3C+M,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,qBAArB,EAA4CiC,IAA5C,GAEA,GAAIkM,CAAAA,CAAW,CAAG/C,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,4BAArB,CAAlB,CACIoO,CAAQ,CAAGhD,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,6CAArB,CADf,CAEIqO,CAAa,CAAGjD,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,2CAArB,CAFpB,CAGIsO,CAAU,CAAGlD,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,0CAArB,CAHjB,CAIIuO,CAAkB,CAAG,UAAW,CAC5BH,CAAQ,CAACjJ,WAAT,CAAqB,UAArB,EACAkJ,CAAa,CAAClJ,WAAd,CAA0B,UAA1B,EACAmJ,CAAU,CAACnJ,WAAX,CAAuB,UAAvB,EACA,OAAQgJ,CAAW,CAACnK,GAAZ,EAAR,EACI,IAAM,GAAN,CACIoK,CAAQ,CAAClJ,QAAT,CAAkB,UAAlB,EACA,MACJ,IAAM,GAAN,CACImJ,CAAa,CAACnJ,QAAd,CAAuB,UAAvB,EACA,MACJ,IAAM,GAAN,CACIoJ,CAAU,CAACpJ,QAAX,CAAoB,UAApB,EACA,MATR,CAWH,CAnBL,CAqBAqJ,CAAkB,GAClBrT,CAAY,CAACkT,CAAD,CAAW,UAAW,CAC9B,GAA0B,GAAtB,GAAAD,CAAW,CAACnK,GAAZ,EAAJ,CAA+B,CAC3BmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CAFD,IAEO,CACHmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CACDuK,CAAkB,GAClBJ,CAAW,CAAC,CAAD,CAAX,CAAehB,aAAf,CAA6BP,CAA7B,CACH,CARW,CAAZ,CASA1R,CAAY,CAACmT,CAAD,CAAgB,UAAW,CACnC,GAA0B,GAAtB,GAAAF,CAAW,CAACnK,GAAZ,EAAJ,CAA+B,CAC3BmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CAFD,IAEO,CACHmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CACDuK,CAAkB,GAClBJ,CAAW,CAAC,CAAD,CAAX,CAAehB,aAAf,CAA6BP,CAA7B,CACH,CARW,CAAZ,CASA1R,CAAY,CAACoT,CAAD,CAAa,UAAW,CAChC,GAA0B,GAAtB,GAAAH,CAAW,CAACnK,GAAZ,EAAJ,CAA+B,CAC3BmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CAFD,IAEO,CACHmK,CAAW,CAACnK,GAAZ,CAAgB,CAAhB,CACH,CACDuK,CAAkB,GAClBJ,CAAW,CAAC,CAAD,CAAX,CAAehB,aAAf,CAA6BP,CAA7B,CACH,CARW,CASf,CArDD,IAqDO,CACHxB,CAAK,CAACxH,OAAN,GAAgB5D,IAAhB,CAAqB,wBAArB,EAA+CiC,IAA/C,EACH,CAEDkJ,EAAe,CAACpL,CAAD,CAAOqL,CAAP,CAAf,CACAA,CAAK,CAACpJ,IAAN,GAEA,MAAOoJ,CAAAA,CACV,CA7JD,EA8JA,MAAOA,CAAAA,CACV,CAvKD,CAwKH,CAh3C8C,CAu3C3CoD,EAAI,CAAG,UAAW,CAClBjP,CAAW,CAAC,WAAD,CAAc,CAACgD,EAAE,CAAEzG,CAAK,CAACyG,EAAX,CAAd,CAA8B,SAASkM,CAAT,CAAkB,CAEvD,GAAIA,CAAJ,CAAa,CACT,IAAK,GAAI7M,CAAAA,CAAT,GAAkB6M,CAAAA,CAAlB,CAA2B,CACvBlI,EAAS,CACLkI,CAAO,CAAC7M,CAAD,CAAP,CAAeW,EADV,CAELkM,CAAO,CAAC7M,CAAD,CAAP,CAAe4E,IAFV,CAGLiI,CAAO,CAAC7M,CAAD,CAAP,CAAe6E,KAAf,EAAwB,EAHnB,CAIL1K,CAAO,CAACiM,OAAR,CAAgBpG,CAAK,CAAG7F,CAAO,CAACiM,OAAR,CAAgBvH,MAAxC,CAJK,CAMZ,CACJ,CAED,GAAI7B,CAAJ,CAAc,CACV6I,EAAkB,EACrB,CAED9I,CAAa,CAAG7C,CAAK,CAAC4G,SAAtB,CAEA,GAAI9D,CAAJ,CAAc,CACV4I,EAAc,EACjB,CAED7H,EAAW,EACd,CAxBU,CAyBd,CAj5C8C,CAo5C3C+O,EAAW,CAAG,EAp5C6B,CAq5C/C,IAAK,GAAIC,CAAAA,EAAT,GAAmB1S,CAAAA,CAAnB,CAA4B,CACxByS,EAAW,CAACE,IAAZ,CAAiB,CAACjU,GAAG,CAAEgU,EAAN,CAAcE,SAAS,CAAE,WAAzB,CAAjB,CACH,CAEDxB,UAAEyB,IAAF,CAAO,kBAAWJ,EAAX,CAAP,EAAgCtU,IAAhC,CAAqC,SAAS2U,CAAT,CAAkB,CACnD,GAAInN,CAAAA,CAAK,CAAG,CAAZ,CACA,IAAK+M,EAAL,GAAe1S,CAAAA,CAAf,CAAwB,CACpBA,CAAO,CAAC0S,EAAD,CAAP,CAAkBI,CAAO,CAACnN,CAAK,EAAN,CAC5B,CAED4M,EAAI,EACP,CAPD,CAQH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle the board.\n *\n * @package    mod_board\n * @author     Karen Holland <karen@brickfieldlabs.ie>\n * @copyrigt   2021 Brickfield Education Labs <https://www.brickfield.ie/>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport \"jqueryui\";\nimport {get_strings as getStrings, get_string as getString} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport ModalFactory from \"core/modal_factory\";\nimport ModalEvents from \"core/modal_events\";\nimport Notification from \"core/notification\";\nimport \"mod_board/jquery.editable.amd\";\nimport Fragment from \"core/fragment\";\n\n/**\n * Execute a ajax call to a mod_board ajax service.\n *\n * @method _serviceCall\n * @param method\n * @param args\n * @param callback\n * @param failcallback\n * @private\n */\nconst _serviceCall = function(method, args, callback, failcallback) {\n    Ajax.call([{\n        methodname: 'mod_board_' + method,\n        args: args,\n        done: function(data) {\n            callback(data);\n        },\n        fail: function(error) {\n            Notification.exception(error);\n            if (failcallback) {\n                failcallback(error);\n            }\n        }\n    }]);\n};\n\n/**\n * Indicates if this is a keycode we want to listend to for\n * aria purposes.\n *\n * @method isAriaTriggerKey\n * @param key\n * @returns {boolean}\n */\nconst isAriaTriggerKey = function(key) {\n    return key == 13 || key == 32;\n};\n\n/**\n * Encodes text into html entities.\n *\n * @method encodeText\n * @param rawText\n * @returns {*|jQuery}\n */\nconst encodeText = function(rawText) {\n    return $('<div />').text(rawText).html();\n};\n\n/**\n * Decodes text from html entities.\n *\n * @method decodeText\n * @param encodedText\n * @returns {*|jQuery}\n */\nconst decodeText = function(encodedText) {\n    return $('<div />').html(encodedText).text();\n};\n\n/**\n * Handler for keypress and click actions.\n *\n * $method handleAction\n * @param elem\n * @param callback\n * @returns {*}\n */\nconst handleAction = function(elem, callback) {\n    return elem.on('click keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode)) {\n                e.preventDefault();\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * Setting up element edibility.\n *\n * @method handleEditableAction\n * @param elem\n * @param callback\n * @param callBeforeOnKeyEditing\n * @returns {*}\n */\nconst handleEditableAction = function(elem, callback, callBeforeOnKeyEditing) {\n    if (elem.is(':editable')) {\n        throw new Error('handleEditableAction - must be called before setting the element as editable');\n    }\n\n    // Can't use on(edit) here because we want to do actions (save cache) before the control goes into edit mode\n    return elem.on('dblclick keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode) && !elem.is(':editing')) {\n                e.preventDefault();\n                if (callBeforeOnKeyEditing) {\n                    callback();\n                }\n                elem.editable('open');\n                if (callBeforeOnKeyEditing) {\n                    return;\n                }\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * The default function of the module, which does the setup of the page.\n *\n * @param board\n * @param options\n * @param contextid\n */\nexport default function(board, options, contextid) {\n    // An array of strings to load as a batch later.\n    // Not necessary, but used to load all the strings in one ajax call.\n    var strings = {\n        default_column_heading: '',\n        post_button_text: '',\n        cancel_button_text: '',\n        remove_note_title: '',\n        remove_note_text: '',\n        remove_column_title: '',\n        note_changed_title: '',\n        note_changed_text: '',\n        note_deleted_text: '',\n        rate_note_text: '',\n        Ok: '',\n        delete: '',\n        Cancel: '',\n        warning: '',\n        modal_title_new: '',\n        modal_title_edit: '',\n        option_youtube: '',\n        option_image: '',\n        option_link: '',\n\n        aria_newcolumn: '',\n        aria_newpost: '',\n        aria_deletecolumn: '',\n        aria_deletepost: '',\n        aria_addmedia: '',\n        aria_addmedianew: '',\n        aria_deleteattachment: '',\n        aria_postedit: '',\n        aria_canceledit: '',\n        aria_postnew: '',\n        aria_cancelnew: '',\n        aria_ratepost: '',\n\n        invalid_file_extension: '',\n        invalid_file_size_min: '',\n        invalid_file_size_max: '',\n\n        invalid_youtube_url: '',\n    };\n\n    const MEDIA_SELECTION_BUTTONS = 1,\n          ATTACHMENT_VIDEO = 1,\n          ATTACHMENT_IMAGE = 2,\n          ATTACHMENT_LINK = 3,\n          SORTBY_DATE = 1,\n          SORTBY_RATING = 2,\n          SORTBY_NONE = 3;\n    var reloadTimer = null,\n        lastHistoryId = null,\n        isEditor = options.isEditor || false,\n        usersCanEdit = options.usersCanEdit,\n        userId = options.userId || -1,\n        mediaSelection = options.mediaselection || MEDIA_SELECTION_BUTTONS,\n        editingNote = 0,\n        isReadOnlyBoard = options.readonly || false,\n        ratingenabled = options.ratingenabled,\n        sortby = options.sortby || SORTBY_DATE,\n        editModal = null;\n    /**\n     * Helper method to make calles to mod_board external services.\n     *\n     * @method serviceCall\n     * @param method\n     * @param args\n     * @param callback\n     * @param failcallback\n     */\n    var serviceCall = function(method, args, callback, failcallback) {\n        if (method !== 'board_history') {\n            stopUpdating();\n        }\n        _serviceCall(method, args, function() {\n            callback.apply(null, arguments);\n            if (method !== 'board_history' && method != 'get_board') {\n                updateBoard(true);\n            }\n        }, failcallback);\n    };\n\n    /**\n     * Returns the jquery element of a given note identifier.\n     *\n     * @method getNote\n     * @param {number} ident\n     * @returns {jQuery<HTMLElement>}\n     */\n    var getNote = function(ident) {\n        return $(\".board_note[data-ident='\" + ident + \"']\");\n    };\n\n    /**\n     * Returns the jquery element of the note text for the given note element.\n     *\n     * @method getNoteTextForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteTextForNote = function(note) {\n        return $(note).find(\".mod_board_note_text\");\n    };\n\n    /**\n     * Returns the jquery element of the note heading for the given note element.\n     *\n     * @method getNoteHeadingForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteHeadingForNote = function(note) {\n        return $(note).find(\".mod_board_note_heading\");\n    };\n\n    /**\n     * Returns the jquery element of the note border for the given note element.\n     *\n     * @method getNoteBorderForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteBorderForNote = function(note) {\n        return $(note).find(\".mod_board_note_border\");\n    };\n\n    /**\n     * Gets a jquery node for the attachments of a given note.\n     *\n     * @method getNoteAttachmentsForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteAttachmentsForNote = function(note) {\n        return $(note).find(\".mod_board_note_attachment\");\n    };\n\n    /**\n     * Creates text identifier for a given node.\n     *\n     * @method textIdentifierForNote\n     * @param note\n     * @returns {null|*|jQuery}\n     */\n    var textIdentifierForNote = function(note) {\n        var noteText = getNoteTextForNote(note).html(),\n            noteHeading = getNoteHeadingForNote(note).html(),\n            noteAttachment = attachmentDataForNote(note);\n\n        if (noteHeading.length > 0) {\n            return noteHeading;\n        }\n        if (noteText.length > 0) {\n            return noteText.replace(/<br\\s*\\/?>/gi, \" \").replace(/\\n/g, \" \").split(/\\s+/).slice(0, 5).join(\" \");\n        }\n        if (noteAttachment.info && noteAttachment.info.length > 0) {\n            return noteAttachment.info;\n        }\n        return null;\n    };\n\n    /**\n     * Update the Aria info for a given note id.\n     *\n     * @method updateNoteAria\n     * @param noteId\n     */\n    var updateNoteAria = function(noteId) {\n        var note = getNote(noteId),\n            columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text();\n\n        if (noteId) { // New post\n            var noteIdentifier = textIdentifierForNote(note),\n                deleteNoteString = strings.aria_deletepost.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n\n            note.find('.delete_note').attr('aria-label', deleteNoteString).attr('title', deleteNoteString);\n            note.find('.mod_board_rating').attr('aria-label', strings.aria_ratepost.replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier));\n            note.find('.note_ariatext').html(noteIdentifier);\n        }\n\n    };\n\n    /**\n     * Update the Aria information for a given column id.\n     *\n     * @method updateColumnAria\n     * @param columnId\n     */\n    var updateColumnAria = function(columnId) {\n        var column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            newNoteString = strings.aria_newpost.replace('{column}', columnIdentifier),\n            deleteColumnString = strings.aria_deletecolumn.replace('{column}', columnIdentifier);\n        column.find('.newnote').attr('aria-label', newNoteString).attr('title', newNoteString);\n        column.find('.delete_column').attr('aria-label', deleteColumnString).attr('title', deleteColumnString);\n\n        column.find(\".board_note\").each(function(index, note) {\n            updateNoteAria($(note).data('ident'));\n        });\n    };\n\n    /**\n     * Stop the current note editing process.\n     *\n     * @method stopNoteEdit\n     */\n    var stopNoteEdit = function() {\n        if (!editingNote) {\n            getNote(0).remove();\n            return;\n        }\n\n        var note = getNote(editingNote);\n\n        if (note) {\n            var noteHeading = getNoteHeadingForNote(note);\n            var noteText = getNoteTextForNote(note);\n            var noteBorder = getNoteBorderForNote(note);\n\n            // Reset the visibility state.\n            noteHeading.show();\n            noteBorder.show();\n            noteText.show();\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n        }\n\n        editingNote = 0;\n    };\n\n    /**\n     * Start the editing of a particular note, by identifier.\n     *\n     * @method startNoteEdit\n     * @param ident\n     */\n    var startNoteEdit = function(ident) {\n\n        if (editingNote) {\n            if (editingNote == ident) {\n                return;\n            }\n            stopNoteEdit();\n        }\n\n        if (ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = getNote(ident);\n        if (note) {\n            showModalForm(note);\n\n            if (ident) {\n                editingNote = ident;\n            }\n        }\n    };\n\n    /**\n     * Delete a given note, by identifier.\n     *\n     * @method deleteNote\n     * @param ident\n     */\n    var deleteNote = function(ident) {\n        Notification.confirm(\n            strings.remove_note_title, // Are you sure?\n            strings.remove_note_text, // This will effect others.\n            strings.delete,\n            strings.Cancel,\n            function() {\n                serviceCall('delete_note', { id: ident }, function (result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        let note = getNote(ident);\n                        if (sortby == SORTBY_NONE) {\n                            let columnID = note.data('column');\n                            let sortorder = note.data('sortorder');\n                            sortAfterDelete(columnID, sortorder);\n                        }\n                        note.remove();\n                    }\n                });\n            }\n        );\n    };\n\n    /**\n     * This function gets a board column as a jQuery element.\n     * @param {number} columnID The column ID.\n     * @returns {jQuery<HTMLElement>}\n     */\n    const getColumn = (columnID) => {\n        return $(`.board_column[data-ident='${columnID}'] .board_column_content`);\n    };\n\n    const sortAfterDelete = (columnID, sortorder) => {\n        let column = getColumn(columnID);\n        let elements = column.children().filter((_, element) => {\n            return parseInt($(element).data('sortorder')) > parseInt(sortorder);\n        });\n        elements.each((_, element) => {\n            let so = $(element).data('sortorder');\n            $(element).data('sortorder', so - 1);\n        });\n    };\n\n    /**\n     * Rate (star) a give note, by identifier.\n     *\n     * @method rateNote\n     * @param ident\n     */\n    var rateNote = function(ident) {\n        if (!ratingenabled) {\n            return;\n        }\n        if (isReadOnlyBoard) {\n            return;\n        }\n\n        var note = getNote(ident),\n            rating = note.find('.mod_board_rating');\n        if (rating.data('disabled')) {\n            return;\n        }\n        rating.data('disabled', true);\n\n        serviceCall('can_rate_note', {id: ident}, function(canrate) {\n            if (canrate) {\n                Notification.confirm(\n                    strings.rate_note_text, // Are you sure?\n                    null,\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('rate_note', {id: ident}, function(result) {\n                            if (result.status) {\n                                lastHistoryId = result.historyid;\n                                rating.html(result.rating);\n                                if (sortby == SORTBY_RATING) {\n                                    sortNotes(note.closest('.board_column_content'));\n                                }\n                            }\n                            rating.data('disabled', false);\n                        });\n                    }\n                ).then(function(rateModal) {\n                    // Do this here, because it catches both cancel clicks, or someone clicking the X.\n                    rateModal.getRoot().on(ModalEvents.hidden, function() {\n                        rating.data('disabled', false);\n                    });\n                });\n            }\n        });\n    };\n\n    /**\n     * Update the attachment information of a note.\n     *\n     * @method attachmentTypeChanged\n     * @param note\n     */\n    var attachmentTypeChanged = function(note) {\n        var noteAttachment = getNoteAttachmentsForNote(note),\n            type = noteAttachment.find('.mod_board_type').val(),\n            attachmentInfo = noteAttachment.find('.info'),\n            attachmentUrl = noteAttachment.find('.url'),\n            attachmentFile = noteAttachment.find('.mod_board_file');\n\n        if (type > \"0\") {\n            attachmentInfo.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_info']);\n            attachmentUrl.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_url']);\n\n            attachmentInfo.show();\n            if (type == ATTACHMENT_IMAGE && FileReader) {\n                attachmentFile.show();\n                attachmentUrl.hide();\n            } else {\n                attachmentFile.hide();\n                attachmentUrl.show();\n            }\n        } else {\n            attachmentInfo.hide();\n            attachmentUrl.hide();\n            attachmentFile.hide();\n\n            attachmentInfo.val('');\n            attachmentUrl.val('');\n\n        }\n    };\n\n    /**\n     * Set the attachment of a note.\n     *\n     * @method setAttachment\n     * @param note\n     * @param attachment\n     */\n    var setAttachment = function(note, attachment) {\n        var noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment) {\n            if (!attachment) {\n                attachment = {type: \"0\"};\n            } else {\n                attachment.type += \"\";// Just in case\n            }\n            var attType = noteAttachment.find('.mod_board_type');\n            attType.val(attachment.type ? attachment.type : \"0\");\n            if (attType.val() > \"0\") {\n                noteAttachment.find('.info').val(decodeText(attachment.info));\n                noteAttachment.find('.url').val(decodeText(attachment.url));\n            }\n            attachmentTypeChanged(note, attachment);\n        }\n        previewAttachment(note, attachment);\n    };\n\n    /**\n     * Returns an object with various information about a note's attachment.\n     *\n     * @method attachmentDataForNote\n     * @param note\n     * @returns {{filename: null, filecontents: null, type: number, url: null, info: null}}\n     */\n    var attachmentDataForNote = function(note) {\n        var attachment = {type: 0, info: null, url: null, filename: null, filecontents: null},\n            noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment.length) {\n            attachment.type = noteAttachment.find('.mod_board_type').val();\n            attachment.info = encodeText(noteAttachment.find('.info').val());\n            attachment.url = encodeText(noteAttachment.find('.url').val());\n            var fileElem = noteAttachment.find('.mod_board_file>input');\n            if (fileElem.data('filename')) {\n                attachment.filename = fileElem.data('filename');\n                attachment.filecontents = fileElem.data('filecontents');\n            }\n        }\n        if ((!attachment.info || !attachment.info.length) && (!attachment.url || !attachment.url.length) &&\n            (!attachment.filename)) {\n            attachment.type = 0;\n        }\n\n        return attachment;\n    };\n\n    /**\n     * Get the string type of a attachment type number.\n     *\n     * @method attachmentTypeToString\n     * @param type\n     * @returns {string|null}\n     */\n    var attachmentTypeToString = function(type) {\n        switch (type) {\n            case \"1\": return 'youtube';\n            case \"2\": return 'image';\n            case \"3\": return 'link';\n            default: return null;\n        }\n    };\n\n    /**\n     * This parses a youtube video ID from a URL. We can use this ID to\n     * construct the embed URL.\n     * @param {string} url The URL entered to the modal.\n     * @returns {string | null} The youtube embed URL or null.\n     */\n    const getEmbedUrl = (url) => {\n        // Thanks for the regex from: https://gist.github.com/rodrigoborgesdeoliveira/987683cfbfcc8d800192da1e73adc486\n        let regex = /(\\/|%3D|v=)([0-9A-z-_]{11})([%#?&]|$)/;\n        let videoID = url.match(regex);\n        if (!videoID || videoID[2] === undefined || videoID[2].length !== 11) {\n            return null;\n        }\n        return `https://www.youtube-nocookie.com/embed/${videoID[2]}`;\n    };\n\n    /**\n     * Display the attachment preview for a note.\n     *\n     * @method previewAttachment\n     * @param note\n     * @param attachment\n     */\n    var previewAttachment = function(note, attachment) {\n        var elem = note.find('.mod_board_preview');\n        if (!attachment) {\n            attachment = attachmentDataForNote(note);\n        }\n\n        if (!getNoteTextForNote(note).html().length) {\n            elem.addClass('mod_board_notext');\n        } else {\n            elem.removeClass('mod_board_notext');\n        }\n\n        elem.removeClass('wrapper_youtube');\n        elem.removeClass('wrapper_image');\n        elem.removeClass('wrapper_url');\n        if (attachment.filename && parseInt(attachment.type) == ATTACHMENT_IMAGE) { // Before uploading\n            elem.html(`<img src=\"${attachment.filecontents}\" alt=\"${attachment.info}\"\n                class=\"mod_board_preview_element\"/>`);\n            elem.addClass('wrapper_image');\n            elem.show();\n        } else if (attachment.url) {\n            switch (parseInt(attachment.type)) {\n                case ATTACHMENT_VIDEO: { // Youtube\n                    let url = getEmbedUrl(attachment.url);\n                    if (url === null) {\n                        elem.html(strings.invalid_youtube_url);\n                    } else {\n                        elem.html('<iframe src=\"' + url +\n                            '\" class=\"mod_board_preview_element\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;' +\n                            'encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>');\n                        elem.addClass('wrapper_youtube');\n                    }\n                    elem.show();\n                }\n                break;\n                case ATTACHMENT_IMAGE: // Image\n                    elem.html(`<img src=\"${attachment.url}\" alt=\"${attachment.info}\"\n                        class=\"mod_board_preview_element\"/>`);\n                    elem.addClass('wrapper_image');\n                    elem.show();\n                break;\n                case ATTACHMENT_LINK: // Url\n                    elem.html('<a href=\"' + attachment.url + '\" class=\"mod_board_preview_element\" target=\"_blank\">' +\n                             (attachment.info || attachment.url) + '</a>');\n                    elem.addClass('wrapper_url');\n                    elem.show();\n                break;\n                default:\n                    elem.html('');\n                    elem.hide();\n            }\n        } else {\n            elem.html('');\n            elem.hide();\n        }\n    };\n\n    /**\n     * Add a new note with the given information.\n     *\n     * @method addNote\n     * @param columnid\n     * @param ident\n     * @param heading\n     * @param content\n     * @param attachment\n     * @param owner\n     * @param sortorder\n     * @param rating\n     */\n    var addNote = function(columnid, ident, heading, content, attachment, owner, sortorder, rating) {\n        var ismynote = owner.id == userId || !ident;\n        var iseditable = isEditor || (ismynote && !isReadOnlyBoard);\n\n        if (!ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        // Making space for this note if necessary in the sort order.\n        if (sortby == SORTBY_NONE) {\n            let children = $(`.board_column[data-ident='${columnid}'] .board_column_content`).children();\n            let elements = children.filter((_, element) => {\n                return parseInt($(element).data('sortorder')) >= parseInt(sortorder);\n            });\n            elements.each((_, element) => {\n                let so = $(element).data('sortorder');\n                $(element).data('sortorder', so + 1);\n            });\n        }\n\n        var note = $('<div class=\"board_note\" data-column=\"' + columnid + '\" data-ident=\"' + ident +\n            '\" data-sortorder=\"' + sortorder + '\"></div>');\n        if (ismynote) {\n            note.addClass('mod_board_mynote');\n        }\n        if (iseditable) {\n            note.addClass('mod_board_editablenote');\n        }\n        if (!ismynote && !iseditable) {\n            note.addClass('mod_board_nosort');\n        }\n\n        var notecontent = $('<div class=\"mod_board_note_content\"></div>'),\n            noteHeading = $('<div class=\"mod_board_note_heading\" tabindex=\"0\">' + (heading ? heading : '') + '</div>'),\n            noteBorder = $('<div class=\"mod_board_note_border\"></div>'),\n            noteText = $('<div class=\"mod_board_note_text\" tabindex=\"0\">' + (content ? content : '') + '</div>'),\n            noteAriaText = $('<div class=\"note_ariatext hidden\" role=\"heading\" aria-level=\"4\" tabindex=\"0\"></div>'),\n            attachmentPreview = $('<div class=\"mod_board_preview\"></div>');\n\n        notecontent.append(noteHeading);\n        notecontent.append(noteBorder);\n        notecontent.append(noteText);\n        notecontent.append(noteAriaText);\n\n        notecontent.append(attachmentPreview);\n        note.append(notecontent);\n\n        var columnContent = $('.board_column[data-ident=' + columnid + '] .board_column_content');\n\n        var beginEdit = () => {\n            startNoteEdit(ident);\n        };\n\n        if (ident) {\n            if (ratingenabled) {\n                note.addClass('mod_board_rateablenote');\n                var rateElement = $(`<div class=\"fa fa-star mod_board_rating\" role=\"button\" tabindex=\"0\"> ${rating} </div>`);\n\n                handleAction(rateElement, () => {\n                    rateNote(ident);\n                });\n                notecontent.append(rateElement);\n            }\n\n            if (iseditable) {\n                var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_note\" role=\"button\" tabindex=\"0\"></div>');\n                handleAction(removeElement, () => {\n                    deleteNote(ident);\n                });\n\n                notecontent.append(removeElement);\n\n                handleEditableAction(noteText, beginEdit);\n                handleEditableAction(noteHeading, beginEdit);\n                handleEditableAction(noteBorder, beginEdit);\n\n                setAttachment(note, attachment);\n            } else {\n                previewAttachment(note, attachment);\n            }\n\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n\n            var lastOne = columnContent.find(\".board_note\").last();\n\n            if (lastOne.length) {\n                note.insertAfter(lastOne);\n            } else {\n                columnContent.prepend(note);\n            }\n        } else {\n            $('.board_column[data-ident=' + columnid + '] .board_column_newcontent').append(note);\n            // This is effectively a note placeholder. So we don't need to show it.\n            note.hide();\n            beginEdit();\n        }\n    };\n\n    /**\n     * Add a new column.\n     *\n     * @method addColumn\n     * @param ident\n     * @param name\n     * @param notes\n     */\n    var addColumn = function (ident, name, notes, colour) {\n        let headerStyle = `style=\"border-top: 10px solid #${colour}\"`;\n        var iseditable = isEditor,\n            nameCache = null,\n            column = $(`<div class=\"board_column board_column_hasdata\" ${headerStyle} data-ident=\"${ident}\"></div>`),\n            columnHeader = $('<div class=\"board_column_header\"></div>'),\n            columnSort = $('<div class=\"mod_board_column_sort fa\"></div>'),\n            columnName = $('<div class=\"mod_board_column_name\" tabindex=\"0\" aria-level=\"3\" role=\"heading\">' + name + '</div>'),\n            columnContent = $('<div class=\"board_column_content\"></div>'),\n            columnNewContent = $('<div class=\"board_column_newcontent\"></div>');\n        // Only add the sort button if it makes sense.\n        if (sortby != SORTBY_NONE) {\n            columnHeader.append(columnSort);\n        }\n        columnHeader.append(columnName);\n\n        if (options.hideheaders) {\n            columnName.addClass('d-none');\n        }\n\n        columnSort.on('click', function() {\n            sortNotes(columnContent, true);\n        });\n\n        if (iseditable) {\n            column.addClass('mod_board_editablecolumn');\n\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_column\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, () => {\n                Notification.confirm(\n                    strings.remove_column_title, // Are you sure?\n                    getString('remove_column_text', 'mod_board', getColumnName(ident)),\n                    strings.delete,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('delete_column', {id: ident}, function(result) {\n                            if (result.status) {\n                                column.remove();\n                                lastHistoryId = result.historyid;\n                            }\n                        });\n                    }\n                );\n            });\n\n            columnHeader.append(removeElement);\n        }\n\n        column.append(columnHeader);\n        column.append(columnContent);\n        column.append(columnNewContent);\n\n        if (iseditable) {\n            handleEditableAction(columnName, function() {\n                nameCache = columnName.html();\n            }, true);\n\n            columnName.editable({\n                toggleFontSize: false,\n                closeOnEnter: true,\n                callback: function(data) {\n                    if (data.content) {\n                        serviceCall('update_column', {id: ident, name: columnName.html()}, function(result) {\n                            if (!result.status) {\n                                columnName.html(nameCache);\n                                nameCache = null;\n                            } else {\n                                lastHistoryId = result.historyid;\n                                updateColumnAria(ident);\n                            }\n                        }, function() {\n                            columnName.html(nameCache);\n                            nameCache = null;\n                        });\n                    } else {\n                        columnName.html(nameCache);\n                        nameCache = null;\n                    }\n                }\n            });\n        }\n\n        if (!isReadOnlyBoard) {\n            columnNewContent.append('<div class=\"board_button newnote\" role=\"button\" tabindex=\"0\">' +\n            '<div class=\"button_content\"><span class=\"fa ' + options.noteicon + '\"></span></div></div>');\n\n            handleAction(columnNewContent.find('.newnote'), function() {\n                addNote(ident, 0, null, null, null, {id: userId}, 0, 0);\n            });\n        }\n\n        var lastOne = $(\".mod_board .board_column_hasdata\").last();\n        if (lastOne.length) {\n            column.insertAfter(lastOne);\n        } else {\n            $(\".mod_board\").append(column);\n        }\n\n        if (notes) {\n            for (var index in notes) {\n                let sortorder = sortby == 3 ? notes[index].sortorder : notes[index].timecreated;\n                addNote(ident, notes[index].id, notes[index].heading, notes[index].content,\n                    {type: notes[index].type, info: notes[index].info, url: notes[index].url},\n                    {id: notes[index].userid}, sortorder, notes[index].rating);\n            }\n        }\n        sortNotes(columnContent);\n        updateColumnAria(ident);\n        if (isEditor || usersCanEdit == 1) {\n            updateSortable();\n        }\n    };\n\n    /**\n     * Gets the text name used in the heading of a column.\n     * @param {number} id The ID data attribute on the column element.\n     * @returns {string}\n     */\n    const getColumnName = (id) => {\n        return $(`.board_column[data-ident='${id}']`).find('.mod_board_column_name').html();\n    };\n\n    /**\n     * Add the new column button.\n     *\n     * @method addNewColumnButton\n     */\n    var addNewColumnButton = function() {\n        var column = $('<div class=\"board_column board_column_empty\"></div>'),\n            newBusy = false;\n        column.append('<div class=\"board_button newcolumn\" role=\"button\" tabindex=\"0\" aria-label=\"' +\n            strings.aria_newcolumn + '\" title=\"' + strings.aria_newcolumn + '\"><div class=\"button_content\"><span class=\"fa '\n            + options.columnicon + '\"></span></div></div>');\n\n        handleAction(column.find('.newcolumn'), function() {\n            if (newBusy) {\n                return;\n            }\n            newBusy = true;\n\n            serviceCall('add_column', {boardid: board.id, name: strings.default_column_heading}, function(result) {\n                addColumn(result.id, strings.default_column_heading, {}, selectHeadingColour());\n                lastHistoryId = result.historyid;\n                newBusy = false;\n            }, function() {\n                newBusy = false;\n            });\n        });\n\n        $(\".mod_board\").append(column);\n    };\n\n    /**\n     * This selects the next heading colour from options based on the count of the\n     * current columns. Length of decremented by one as the new column button is\n     * also denoted as a column.\n     * @returns {string} colour hex string.\n     */\n    const selectHeadingColour = () => {\n        let colCount = $('.board_column').length - 1;\n        let colourCount = options.colours.length;\n        return options.colours[colCount % colourCount];\n    };\n\n    /**\n     * Update a note with the provided information.\n     *\n     * @method updateNote\n     * @param note\n     * @param heading\n     * @param data\n     */\n    var updateNote = function(note, heading, data) {\n        var noteHeading = getNoteHeadingForNote(note);\n        var noteText = getNoteTextForNote(note);\n        var noteBorder = getNoteBorderForNote(note);\n\n        noteText.html(data.content);\n        noteHeading.html(data.heading);\n        setAttachment(note, data.attachment);\n        updateNoteAria(data.id);\n\n        // Reset the visibility state.\n        noteHeading.show();\n        noteBorder.show();\n        noteText.show();\n        if (!noteHeading.html()) {\n            noteHeading.hide();\n            noteBorder.hide();\n        }\n        if (!noteText.html() && noteHeading.html()) {\n            noteText.hide();\n            noteBorder.hide();\n        }\n    };\n\n    /**\n     * Fetch and process the recent board history.\n     *\n     * @method processBoardHistory\n     */\n    var processBoardHistory = function() {\n        serviceCall('board_history', {id: board.id, since: lastHistoryId}, function(boardhistory) {\n            for (var index in boardhistory) {\n                var item = boardhistory[index];\n                if (item.boardid != board.id) {\n                    continue; // Hmm\n                }\n\n                var data = JSON.parse(item.content);\n                if (item.action == 'add_note') {\n                    let sortorder = sortby == 3 ? data.sortorder : data.timecreated;\n                    addNote(data.columnid, data.id, data.heading, data.content, data.attachment,\n                        {id: item.userid}, sortorder, data.rating);\n                    updateNoteAria(data.id);\n                    sortNotes($('.board_column[data-ident=' + data.columnid + '] .board_column_content'));\n                } else if (item.action == 'update_note') {\n                    let note = getNote(data.id),\n                        formModal = editModal,\n                        historyData = data;\n                    if (note) {\n                        let noteHeading = getNoteHeadingForNote(note);\n\n                        if (editingNote == data.id) {\n                            Notification.confirm(\n                                strings.note_changed_title, // Confirm.\n                                strings.note_changed_text, // Are you sure?\n                                strings.Ok,\n                                strings.Cancel,\n                                function() {\n                                    formModal.hide();\n                                    updateNote(note, noteHeading, historyData);\n                                    stopNoteEdit();\n                                }\n                            );\n                        } else {\n                            updateNote(note, noteHeading, data);\n                        }\n                    }\n                } else if (item.action == 'delete_note') {\n                    if (editingNote == data.id) {\n                        Notification.alert(strings.warning, strings.note_deleted_text);\n                        stopNoteEdit();\n                    }\n                    let note = getNote(data.id);\n                    if (sortby == SORTBY_NONE) {\n                        let columnID = note.data('column');\n                        let sortorder = note.data('sortorder');\n                        sortAfterDelete(columnID, sortorder);\n                    }\n                    note.remove();\n\n                } else if (item.action == 'add_column') {\n                    addColumn(data.id, data.name, {}, selectHeadingColour());\n                } else if (item.action == 'update_column') {\n                    $(\".board_column[data-ident='\" + data.id + \"'] .mod_board_column_name\").html(data.name);\n                    updateColumnAria(data.id);\n                } else if (item.action == 'delete_column') {\n                    var column = $(\".board_column[data-ident='\" + data.id + \"']\");\n                    if (editingNote && column.find('.board_note[data-ident=\"' + editingNote + '\"]').length) {\n                        stopNoteEdit();\n                    }\n                    column.remove();\n                } else if (item.action == 'rate_note') {\n                    var note = getNote(data.id);\n                    note.find('.mod_board_rating').html(data.rating);\n                    if (sortby == SORTBY_RATING) {\n                        sortNotes(note.closest('.board_column_content'));\n                    }\n                }\n                lastHistoryId = item.id;\n            }\n\n            updateBoard();\n        });\n    };\n\n    /**\n     * Trigger a board update.\n     *\n     * @method updateBoard\n     * @param instant\n     */\n    var updateBoard = function(instant) {\n        if (instant) {\n            processBoardHistory();\n        } else if (options.history_refresh > 0) {\n            if (reloadTimer) {\n                stopUpdating();\n            }\n            reloadTimer = setTimeout(processBoardHistory, options.history_refresh * 1000);\n        }\n    };\n\n    /**\n     * Stop/prevent the board reload timer from firing.\n     *\n     * @method stopUpdating\n     */\n    var stopUpdating = function() {\n        clearTimeout(reloadTimer);\n        reloadTimer = null;\n    };\n\n    /**\n     * Sort a set of notes.\n     *\n     * @sortNotes\n     * @param content\n     * @param toggle\n     */\n    var sortNotes = function(content, toggle) {\n        var sortCol = $(content).parent().find('.mod_board_column_sort'),\n            direction = $(content).data('sort');\n        if (!direction) {\n            if (sortby == SORTBY_RATING) {\n                direction = 'desc';\n            } else {\n                direction = 'asc';\n            }\n        }\n        if (toggle) {\n            direction = direction == 'asc' ? 'desc' : 'asc';\n        }\n\n        if (direction == 'asc') {\n            sortCol.removeClass('fa-angle-down');\n            sortCol.addClass('fa-angle-up');\n        } else {\n            sortCol.removeClass('fa-angle-up');\n            sortCol.addClass('fa-angle-down');\n        }\n        $(content).data('sort', direction);\n\n        var desc,\n            asc;\n        if (sortby == SORTBY_DATE) {\n            desc = function(a, b) {\n                return $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        } else if (sortby == SORTBY_RATING) {\n            desc = function(a, b) {\n                return $(b).find('.mod_board_rating').text() - $(a).find('.mod_board_rating').text() ||\n                $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).find('.mod_board_rating').text() - $(b).find('.mod_board_rating').text() ||\n                $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        } else if (sortby == SORTBY_NONE) {\n            let sortElements = (a, b) => {\n                return $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n            $('> .board_note', $(content)).sort(sortElements).appendTo($(content));\n            return;\n        }\n\n        $('> .board_note', $(content)).sort(direction === 'asc' ? asc : desc).appendTo($(content));\n\n    };\n\n    /**\n     * Update sorting of sortable content.\n     *\n     * @method updateSortable\n     */\n    var updateSortable = function() {\n        let fromColumnID;\n        $(\".board_column_content\").sortable({\n            connectWith: \".board_column_content\",\n            cancel: \".mod_board_nosort\",\n            start: function(_, ui) {\n                fromColumnID = $(ui.item).closest('.board_column').data('ident');\n            },\n            stop: function(_, ui) {\n                var note = $(ui.item),\n                    tocolumn = note.closest('.board_column'),\n                    elem = $(this),\n                    noteid = note.data('ident'),\n                    columnid = tocolumn.data('ident');\n                let columnElements = tocolumn.find('.board_column_content').children();\n                let sortorder = columnElements.index($(`.board_note[data-ident=${noteid}]`));\n                let payload = {\n                    id: noteid,\n                    columnid: columnid,\n                    sortorder: sortorder\n                };\n                updateSortOrders(fromColumnID, payload.columnid, payload.id, payload.sortorder);\n                serviceCall('move_note', payload, (result) => {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        updateNoteAria(payload.id);\n                        sortNotes($(`.board_column[data-ident=${payload.columnid}] .board_column_content`));\n                    } else {\n                        elem.sortable('cancel');\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * Updates the inline data attributes necessary for rendering the lists\n     * in the correct sort order. Note: the data attribute values updated by\n     * jQuery are not reflected in DOM inspection but are still set.\n     * @param {number} fromColumnID The column ID of the column to sort.\n     * @param {number} toColumnID The column ID of the column to sort.\n     * @param {number} noteID  The note ID that was moved.\n     * @param {number} newSortOrder The new position of the note sort order.\n     */\n    const updateSortOrders = (fromColumnID, toColumnID, noteID, newSortOrder) => {\n        let toColumn = $(`.board_column[data-ident=${toColumnID}] .board_column_content`);\n        let movedNote = $(`.board_note[data-ident=${noteID}]`);\n        let oldSortOrder = movedNote.data('sortorder');\n        // Check whether it is the same column and then increment or decrement notes above or below\n        // then set sortorder according to whether the sortorder has moved up or down.\n        let toChildren = toColumn.children();\n        if (fromColumnID == toColumnID) {\n            toChildren.each((_, note) => {\n                let sortOrder = $(note).data('sortorder');\n                if (oldSortOrder < newSortOrder) {\n                    if (sortOrder <= newSortOrder && sortOrder >= oldSortOrder) {\n                        $(note).data('sortorder', sortOrder - 1);\n                    }\n                } else if (oldSortOrder > newSortOrder) {\n                    if (sortOrder >= newSortOrder && sortOrder <= oldSortOrder) {\n                        $(note).data('sortorder', sortOrder + 1);\n                    }\n                }\n            });\n        } else {\n            let fromColumn = $(`.board_column[data-ident=${fromColumnID}] .board_column_content`);\n            let fromChildren = fromColumn.children();\n            toChildren.each((_, note) => {\n                let sortOrder = $(note).data('sortorder');\n                if (sortOrder >= newSortOrder) {\n                    $(note).data('sortorder', sortOrder + 1);\n                }\n            });\n            fromChildren.each((_, note) => {\n                let sortOrder = $(note).data('sortorder');\n                if (sortOrder > oldSortOrder) {\n                    $(note).data('sortorder', sortOrder - 1);\n                }\n            });\n        }\n        movedNote.data('sortorder', newSortOrder);\n    };\n\n    /**\n     * Get the body fragment for the modal form.\n     *\n     * @param noteid\n     * @param columnid\n     * @returns {Deferred|*}\n     */\n    var getBody = function(noteid, columnid) {\n        // Get the content of the modal.\n        var params = {noteid: noteid, columnid: columnid};\n        return Fragment.loadFragment('mod_board', 'note_form', contextid, params);\n    };\n\n    /**\n     * Setup the aria labels for the modal.\n     *\n     * @param note\n     * @param modal\n     */\n    var updateModalAria = function(note, modal) {\n        let columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text(),\n            addYoutube,\n            addImage,\n            addLink,\n            postButton,\n            cancelButton,\n            modalRoot = modal.getRoot();\n\n        if (note.data('ident')) {\n            // Is a note update.\n            var noteIdentifier = textIdentifierForNote(note);\n\n            postButton = strings.aria_postedit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            cancelButton = strings.aria_canceledit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            addYoutube = strings.aria_addmedia.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addImage = strings.aria_addmedia.replace('{type}', strings.option_image).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addLink = strings.aria_addmedia.replace('{type}', strings.option_link).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n        } else {\n            // Note is new.\n            postButton = strings.aria_postnew.replace('{column}', columnIdentifier);\n            cancelButton = strings.aria_cancelnew.replace('{column}', columnIdentifier);\n            addYoutube = strings.aria_addmedianew.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier);\n            addImage = strings.aria_addmedianew.replace('{type}', strings.option_image).replace('{column}', columnIdentifier);\n            addLink = strings.aria_addmedianew.replace('{type}', strings.option_link).replace('{column}', columnIdentifier);\n        }\n\n        if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('aria-label', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('title', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('aria-label', addImage);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('title', addImage);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('aria-label', addLink);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('title', addLink);\n        }\n\n        let button = modalRoot.find(modal.getActionSelector('save'));\n        if (button) {\n            button.attr('aria-label', postButton);\n        }\n        button = modalRoot.find(modal.getActionSelector('cancel'));\n        if (button) {\n            button.attr('aria-label', cancelButton);\n        }\n    };\n\n    /**\n     * Displays the modal form to edit a note.\n     *\n     * @param note\n     */\n    var showModalForm = function(note) {\n        let noteId = 0,\n            columnId = note.data('column'),\n            column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            title;\n\n        if (note.data('ident')) {\n            noteId = note.data('ident');\n            title = strings.modal_title_edit.replace('{column}', columnIdentifier);\n        } else {\n            title = strings.modal_title_new.replace('{column}', columnIdentifier);\n        }\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: getBody(noteId, columnId),\n            large: true,\n            removeOnClose: true\n        }).then(function(modal) {\n            // Use the body promise so we know body content is loaded.\n            modal.getBodyPromise().then(function () {\n                let saveInProgress = false;\n                editModal = modal;\n                modal.setLarge();\n                modal.setSaveButtonText(strings.post_button_text);\n                modal.setButtonText('cancel', strings.cancel_button_text);\n\n                modal.getRoot().on(ModalEvents.hidden, function () {\n                    stopNoteEdit();\n                    if (!note.data('ident')) {\n                        note.remove();\n                    }\n                });\n\n                modal.getRoot().on(ModalEvents.save, function (e) {\n                    e.preventDefault();\n                    modal.getRoot().find('form').submit();\n                });\n\n                var changeEvent = document.createEvent('HTMLEvents');\n                changeEvent.initEvent('change', true, true);\n\n                modal.getRoot().on('submit', 'form', function (e) {\n                    e.preventDefault();\n\n                    // Prevent multiple form submissions from being sent.\n                    if (saveInProgress) {\n                        return;\n                    }\n                    saveInProgress = true;\n\n                    // First, make sure the native html5 validity checks are run.\n                    let valid = modal.getRoot().find('form').get(0).reportValidity();\n                    if (!valid) {\n                        return;\n                    }\n\n                    // Prompt all inputs to run their validation functions.\n                    // Normally this would happen when the form is submitted, but\n                    // since we aren't submitting the form normally we need to run client side\n                    // validation.\n                    modal.getRoot().find(':input').each(function (index, element) {\n                        element.dispatchEvent(changeEvent);\n                    });\n\n                    // Now the change events have run, see if there are any \"invalid\" form fields.\n                    var invalid = $.merge(\n                        modal.getRoot().find('[aria-invalid=\"true\"]'),\n                        modal.getRoot().find('.error'),\n                        modal.getRoot().find(':invalid')\n                    );\n\n                    // If we found invalid fields, focus on the first one and do not submit via ajax.\n                    if (invalid.length) {\n                        invalid.first().focus();\n                        return;\n                    }\n\n                    var formData = JSON.stringify(modal.getRoot().find('form').serialize());\n                    serviceCall('submit_form', {contextid: contextid, jsonformdata: formData}, function (result) {\n                        if (result.status) {\n                            if (result.action == 'insert') {\n                                // Added a new note.\n                                lastHistoryId = result.historyid;\n                                note.remove();\n                                addNote(columnId, result.note.id, result.note.heading, result.note.content,\n                                    {type: result.note.type, info: result.note.info, url: result.note.url},\n                                    {id: result.note.userid}, result.note.timecreated, result.note.rating);\n                                sortNotes($('.board_column[data-ident=' + columnId + '] .board_column_content'));\n                                updateNoteAria(result.note.id);\n                            } else {\n                                // Updated existing note.\n                                lastHistoryId = result.historyid;\n                                getNoteTextForNote(note).html(result.note.content);\n                                getNoteHeadingForNote(note).html(result.note.heading);\n                                updateNoteAria(result.note.id);\n                                setAttachment(note, {\n                                    type: result.note.type,\n                                    info: result.note.info, url: result.note.url\n                                });\n                            }\n                            stopNoteEdit();\n\n                            // Clear the form changed checker.\n                            Y.use('moodle-core-formchangechecker', function() {\n                                M.core_formchangechecker.reset_form_dirty_state();\n                            });\n\n                            modal.destroy();\n                        } else {\n                            // TODO show error.\n                        }\n                    });\n\n                });\n\n                if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                    // First hide the select menu.\n                    modal.getRoot().find('#fitem_id_mediatype').hide();\n\n                    let mediaSelect = modal.getRoot().find('#fitem_id_mediatype select'),\n                        ytButton = modal.getRoot().find('.mod_board_attachment_button.youtube_button'),\n                        pictureButton = modal.getRoot().find('.mod_board_attachment_button.image_button'),\n                        linkButton = modal.getRoot().find('.mod_board_attachment_button.link_button'),\n                        updateMediaButtons = function() {\n                            ytButton.removeClass('selected');\n                            pictureButton.removeClass('selected');\n                            linkButton.removeClass('selected');\n                            switch (mediaSelect.val()) {\n                                case (\"1\"):\n                                    ytButton.addClass('selected');\n                                    break;\n                                case (\"2\"):\n                                    pictureButton.addClass('selected');\n                                    break;\n                                case (\"3\"):\n                                    linkButton.addClass('selected');\n                                    break;\n                            }\n                        };\n\n                    updateMediaButtons();\n                    handleAction(ytButton, function() {\n                        if (mediaSelect.val() === \"1\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(1);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(pictureButton, function() {\n                        if (mediaSelect.val() === \"2\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(2);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(linkButton, function() {\n                        if (mediaSelect.val() === \"3\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(3);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                } else {\n                    modal.getRoot().find('#fitem_id_mediabuttons').hide();\n                }\n\n                updateModalAria(note, modal);\n                modal.show();\n\n                return modal;\n            });\n            return modal;\n        });\n    };\n\n    /**\n     * Initialize board.\n     *\n     * @method init\n     */\n    var init = function() {\n        serviceCall('get_board', {id: board.id}, function(columns) {\n            // Init\n            if (columns) {\n                for (var index in columns) {\n                    addColumn(\n                        columns[index].id,\n                        columns[index].name,\n                        columns[index].notes || {},\n                        options.colours[index % options.colours.length]\n                    );\n                }\n            }\n\n            if (isEditor) {\n                addNewColumnButton();\n            }\n\n            lastHistoryId = board.historyid;\n\n            if (isEditor) {\n                updateSortable();\n            }\n\n            updateBoard();\n        });\n    };\n\n    // Get strings\n    var stringsInfo = [];\n    for (var string in strings) {\n        stringsInfo.push({key: string, component: 'mod_board'});\n    }\n\n    $.when(getStrings(stringsInfo)).done(function(results) {\n        var index = 0;\n        for (string in strings) {\n            strings[string] = results[index++];\n        }\n\n        init();\n    });\n}\n"],"file":"board.min.js"}