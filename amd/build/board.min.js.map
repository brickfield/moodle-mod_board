{"version":3,"sources":["../src/board.js"],"names":["_serviceCall","method","args","callback","failcallback","Ajax","call","methodname","done","data","fail","error","Notification","exception","isAriaTriggerKey","key","encodeText","rawText","text","html","decodeText","encodedText","handleAction","elem","on","e","type","keyCode","preventDefault","handleEditableAction","callBeforeOnKeyEditing","is","Error","editable","board","options","contextid","strings","default_column_heading","post_button_text","cancel_button_text","remove_note_title","remove_note_text","remove_column_title","remove_column_text","note_changed_title","note_changed_text","note_deleted_text","rate_note_text","Ok","Cancel","warning","modal_title_new","modal_title_edit","option_youtube","option_image","option_link","aria_newcolumn","aria_newpost","aria_deletecolumn","aria_deletepost","aria_addmedia","aria_addmedianew","aria_deleteattachment","aria_postedit","aria_canceledit","aria_postnew","aria_cancelnew","aria_ratepost","invalid_file_extension","invalid_file_size_min","invalid_file_size_max","invalid_youtube_url","MEDIA_SELECTION_BUTTONS","ATTACHMENT_IMAGE","SORTBY_DATE","SORTBY_RATING","reloadTimer","lastHistoryId","isEditor","userId","mediaSelection","mediaselection","editingNote","isReadOnlyBoard","readonly","ratingenabled","sortby","editModal","serviceCall","stopUpdating","apply","arguments","updateBoard","getNote","ident","getNoteTextForNote","note","find","getNoteHeadingForNote","getNoteBorderForNote","getNoteAttachmentsForNote","textIdentifierForNote","noteText","noteHeading","noteAttachment","attachmentDataForNote","length","replace","split","slice","join","info","updateNoteAria","noteId","columnIdentifier","closest","noteIdentifier","deleteNoteString","attr","updateColumnAria","columnId","column","newNoteString","deleteColumnString","each","index","stopNoteEdit","remove","noteBorder","show","hide","startNoteEdit","pendingNote","showModalForm","deleteNote","confirm","id","result","status","historyid","rateNote","rating","canrate","sortNotes","then","rateModal","getRoot","ModalEvents","hidden","attachmentTypeChanged","val","attachmentInfo","attachmentUrl","attachmentFile","prop","attachmentTypeToString","FileReader","setAttachment","attachment","attType","url","previewAttachment","filename","filecontents","fileElem","getEmbedUrl","videoID","match","addClass","removeClass","parseInt","addNote","columnid","heading","content","owner","sortorder","ismynote","iseditable","notecontent","noteAriaText","attachmentPreview","append","columnContent","beginEdit","rateElement","removeElement","lastOne","last","insertAfter","prepend","addColumn","name","notes","colour","headerStyle","nameCache","columnHeader","columnSort","columnName","columnNewContent","hideheaders","toggleFontSize","closeOnEnter","noteicon","userid","timecreated","updateSortable","addNewColumnButton","newBusy","columnicon","boardid","selectHeadingColour","colCount","colourCount","colours","updateNote","processBoardHistory","since","boardhistory","item","JSON","parse","action","formModal","alert","instant","history_refresh","setTimeout","clearTimeout","toggle","sortCol","parent","direction","desc","asc","a","b","sort","appendTo","sortable","connectWith","stop","ui","tocolumn","getBody","noteid","Fragment","loadFragment","updateModalAria","modal","addYoutube","addImage","addLink","postButton","cancelButton","modalRoot","button","getActionSelector","title","ModalFactory","create","types","SAVE_CANCEL","body","large","removeOnClose","getBodyPromise","saveInProgress","setLarge","setSaveButtonText","setButtonText","save","submit","changeEvent","document","createEvent","initEvent","valid","get","reportValidity","element","dispatchEvent","invalid","$","merge","first","focus","formData","stringify","serialize","jsonformdata","Y","use","M","core_formchangechecker","reset_form_dirty_state","destroy","mediaSelect","ytButton","pictureButton","linkButton","updateMediaButtons","init","columns","stringsInfo","string","push","component","when","results"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to handle the board.\n *\n * @package    mod_board\n * @author     Karen Holland <karen@brickfieldlabs.ie>\n * @copyrigt   2021 Brickfield Education Labs <https://www.brickfield.ie/>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from \"jquery\";\nimport \"jqueryui\";\nimport {get_strings as getStrings} from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport ModalFactory from \"core/modal_factory\";\nimport ModalEvents from \"core/modal_events\";\nimport Notification from \"core/notification\";\nimport \"mod_board/jquery.editable.amd\";\nimport Fragment from \"core/fragment\";\n\n/**\n * Execute a ajax call to a mod_board ajax service.\n *\n * @method _serviceCall\n * @param method\n * @param args\n * @param callback\n * @param failcallback\n * @private\n */\nconst _serviceCall = function(method, args, callback, failcallback) {\n    Ajax.call([{\n        methodname: 'mod_board_' + method,\n        args: args,\n        done: function(data) {\n            callback(data);\n        },\n        fail: function(error) {\n            Notification.exception(error);\n            if (failcallback) {\n                failcallback(error);\n            }\n        }\n    }]);\n};\n\n/**\n * Indicates if this is a keycode we want to listend to for\n * aria purposes.\n *\n * @method isAriaTriggerKey\n * @param key\n * @returns {boolean}\n */\nconst isAriaTriggerKey = function(key) {\n    return key == 13 || key == 32;\n};\n\n/**\n * Encodes text into html entities.\n *\n * @method encodeText\n * @param rawText\n * @returns {*|jQuery}\n */\nconst encodeText = function(rawText) {\n    return $('<div />').text(rawText).html();\n};\n\n/**\n * Decodes text from html entities.\n *\n * @method decodeText\n * @param encodedText\n * @returns {*|jQuery}\n */\nconst decodeText = function(encodedText) {\n    return $('<div />').html(encodedText).text();\n};\n\n/**\n * Handler for keypress and click actions.\n *\n * $method handleAction\n * @param elem\n * @param callback\n * @returns {*}\n */\nconst handleAction = function(elem, callback) {\n    return elem.on('click keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode)) {\n                e.preventDefault();\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * Setting up element edibility.\n *\n * @method handleEditableAction\n * @param elem\n * @param callback\n * @param callBeforeOnKeyEditing\n * @returns {*}\n */\nconst handleEditableAction = function(elem, callback, callBeforeOnKeyEditing) {\n    if (elem.is(':editable')) {\n        throw new Error('handleEditableAction - must be called before setting the element as editable');\n    }\n\n    // Can't use on(edit) here because we want to do actions (save cache) before the control goes into edit mode\n    return elem.on('dblclick keypress', function(e) {\n        if (e.type == 'keypress') {\n            if (isAriaTriggerKey(e.keyCode) && !elem.is(':editing')) {\n                e.preventDefault();\n                if (callBeforeOnKeyEditing) {\n                    callback();\n                }\n                elem.editable('open');\n                if (callBeforeOnKeyEditing) {\n                    return;\n                }\n            } else {\n                return;\n            }\n        }\n\n        callback();\n    });\n};\n\n/**\n * The default function of the module, which does the setup of the page.\n *\n * @param board\n * @param options\n * @param contextid\n */\nexport default function(board, options, contextid) {\n    // An array of strings to load as a batch later.\n    // Not necessary, but used to load all the strings in one ajax call.\n    var strings = {\n        default_column_heading: '',\n        post_button_text: '',\n        cancel_button_text: '',\n        remove_note_title: '',\n        remove_note_text: '',\n        remove_column_title: '',\n        remove_column_text: '',\n        note_changed_title: '',\n        note_changed_text: '',\n        note_deleted_text: '',\n        rate_note_text: '',\n        Ok: '',\n        Cancel: '',\n        warning: '',\n        modal_title_new: '',\n        modal_title_edit: '',\n        option_youtube: '',\n        option_image: '',\n        option_link: '',\n\n        aria_newcolumn: '',\n        aria_newpost: '',\n        aria_deletecolumn: '',\n        aria_deletepost: '',\n        aria_addmedia: '',\n        aria_addmedianew: '',\n        aria_deleteattachment: '',\n        aria_postedit: '',\n        aria_canceledit: '',\n        aria_postnew: '',\n        aria_cancelnew: '',\n        aria_ratepost: '',\n\n        invalid_file_extension: '',\n        invalid_file_size_min: '',\n        invalid_file_size_max: '',\n\n        invalid_youtube_url: '',\n    };\n\n    const MEDIA_SELECTION_BUTTONS = 1,\n          ATTACHMENT_VIDEO = 1,\n          ATTACHMENT_IMAGE = 2,\n          ATTACHMENT_LINK = 3,\n          SORTBY_DATE = 1,\n          SORTBY_RATING = 2;\n    var reloadTimer = null,\n        lastHistoryId = null,\n        isEditor = options.isEditor || false,\n        userId = options.userId || -1,\n        mediaSelection = options.mediaselection || MEDIA_SELECTION_BUTTONS,\n        editingNote = 0,\n        isReadOnlyBoard = options.readonly || false,\n        ratingenabled = options.ratingenabled,\n        sortby = options.sortby || SORTBY_DATE,\n        editModal = null;\n    /**\n     * Helper method to make calles to mod_board external services.\n     *\n     * @method serviceCall\n     * @param method\n     * @param args\n     * @param callback\n     * @param failcallback\n     */\n    var serviceCall = function(method, args, callback, failcallback) {\n        if (method !== 'board_history') {\n            stopUpdating();\n        }\n        _serviceCall(method, args, function() {\n            callback.apply(null, arguments);\n            if (method !== 'board_history' && method != 'get_board') {\n                updateBoard(true);\n            }\n        }, failcallback);\n    };\n\n    /**\n     * Returns the jquery element of a given note identifier.\n     *\n     * @method getNote\n     * @param ident\n     * @returns {jQuery|HTMLElement|*}\n     */\n    var getNote = function(ident) {\n        return $(\".board_note[data-ident='\" + ident + \"']\");\n    };\n\n    /**\n     * Returns the jquery element of the note text for the given note element.\n     *\n     * @method getNoteTextForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteTextForNote = function(note) {\n        return $(note).find(\".mod_board_note_text\");\n    };\n\n    /**\n     * Returns the jquery element of the note heading for the given note element.\n     *\n     * @method getNoteHeadingForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteHeadingForNote = function(note) {\n        return $(note).find(\".mod_board_note_heading\");\n    };\n\n    /**\n     * Returns the jquery element of the note border for the given note element.\n     *\n     * @method getNoteBorderForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteBorderForNote = function(note) {\n        return $(note).find(\".mod_board_note_border\");\n    };\n\n    /**\n     * Gets a jquery node for the attachments of a given note.\n     *\n     * @method getNoteAttachmentsForNote\n     * @param note\n     * @returns {*|jQuery}\n     */\n    var getNoteAttachmentsForNote = function(note) {\n        return $(note).find(\".mod_board_note_attachment\");\n    };\n\n    /**\n     * Creates text identifier for a given node.\n     *\n     * @method textIdentifierForNote\n     * @param note\n     * @returns {null|*|jQuery}\n     */\n    var textIdentifierForNote = function(note) {\n        var noteText = getNoteTextForNote(note).html(),\n            noteHeading = getNoteHeadingForNote(note).html(),\n            noteAttachment = attachmentDataForNote(note);\n\n        if (noteHeading.length > 0) {\n            return noteHeading;\n        }\n        if (noteText.length > 0) {\n            return noteText.replace(/<br\\s*\\/?>/gi, \" \").replace(/\\n/g, \" \").split(/\\s+/).slice(0, 5).join(\" \");\n        }\n        if (noteAttachment.info && noteAttachment.info.length > 0) {\n            return noteAttachment.info;\n        }\n        return null;\n    };\n\n    /**\n     * Update the Aria info for a given note id.\n     *\n     * @method updateNoteAria\n     * @param noteId\n     */\n    var updateNoteAria = function(noteId) {\n        var note = getNote(noteId),\n            columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text();\n\n        if (noteId) { // New post\n            var noteIdentifier = textIdentifierForNote(note),\n                deleteNoteString = strings.aria_deletepost.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n\n            note.find('.delete_note').attr('aria-label', deleteNoteString).attr('title', deleteNoteString);\n            note.find('.mod_board_rating').attr('aria-label', strings.aria_ratepost.replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier));\n            note.find('.note_ariatext').html(noteIdentifier);\n        }\n\n    };\n\n    /**\n     * Update the Aria information for a given column id.\n     *\n     * @method updateColumnAria\n     * @param columnId\n     */\n    var updateColumnAria = function(columnId) {\n        var column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            newNoteString = strings.aria_newpost.replace('{column}', columnIdentifier),\n            deleteColumnString = strings.aria_deletecolumn.replace('{column}', columnIdentifier);\n        column.find('.newnote').attr('aria-label', newNoteString).attr('title', newNoteString);\n        column.find('.delete_column').attr('aria-label', deleteColumnString).attr('title', deleteColumnString);\n\n        column.find(\".board_note\").each(function(index, note) {\n            updateNoteAria($(note).data('ident'));\n        });\n    };\n\n    /**\n     * Stop the current note editing process.\n     *\n     * @method stopNoteEdit\n     */\n    var stopNoteEdit = function() {\n        if (!editingNote) {\n            getNote(0).remove();\n            return;\n        }\n\n        var note = getNote(editingNote);\n\n        if (note) {\n            var noteHeading = getNoteHeadingForNote(note);\n            var noteText = getNoteTextForNote(note);\n            var noteBorder = getNoteBorderForNote(note);\n\n            // Reset the visibility state.\n            noteHeading.show();\n            noteBorder.show();\n            noteText.show();\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n        }\n\n        editingNote = 0;\n    };\n\n    /**\n     * Start the editing of a particular note, by identifier.\n     *\n     * @method startNoteEdit\n     * @param ident\n     */\n    var startNoteEdit = function(ident) {\n\n        if (editingNote) {\n            if (editingNote == ident) {\n                return;\n            }\n            stopNoteEdit();\n        }\n\n        if (ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = getNote(ident);\n        if (note) {\n            showModalForm(note);\n\n            if (ident) {\n                editingNote = ident;\n            }\n        }\n    };\n\n    /**\n     * Delete a given note, by identifier.\n     *\n     * @method deleteNote\n     * @param ident\n     */\n    var deleteNote = function(ident) {\n        Notification.confirm(\n            strings.remove_note_title,\n            strings.remove_note_text,\n            strings.Ok,\n            strings.Cancel,\n            function() {\n                serviceCall('delete_note', {id: ident}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        getNote(ident).remove();\n                    }\n                });\n            }\n        );\n    };\n\n    /**\n     * Rate (star) a give note, by identifier.\n     *\n     * @method rateNote\n     * @param ident\n     */\n    var rateNote = function(ident) {\n        if (!ratingenabled) {\n            return;\n        }\n        if (isReadOnlyBoard) {\n            return;\n        }\n\n        var note = getNote(ident),\n            rating = note.find('.mod_board_rating');\n        if (rating.data('disabled')) {\n            return;\n        }\n        rating.data('disabled', true);\n\n        serviceCall('can_rate_note', {id: ident}, function(canrate) {\n            if (canrate) {\n                Notification.confirm(\n                    strings.rate_note_text, // Are you sure?\n                    null,\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('rate_note', {id: ident}, function(result) {\n                            if (result.status) {\n                                lastHistoryId = result.historyid;\n                                rating.html(result.rating);\n                                if (sortby == SORTBY_RATING) {\n                                    sortNotes(note.closest('.board_column_content'));\n                                }\n                            }\n                            rating.data('disabled', false);\n                        });\n                    }\n                ).then(function(rateModal) {\n                    // Do this here, because it catches both cancel clicks, or someone clicking the X.\n                    rateModal.getRoot().on(ModalEvents.hidden, function() {\n                        rating.data('disabled', false);\n                    });\n                });\n            }\n        });\n    };\n\n    /**\n     * Update the attachment information of a note.\n     *\n     * @method attachmentTypeChanged\n     * @param note\n     */\n    var attachmentTypeChanged = function(note) {\n        var noteAttachment = getNoteAttachmentsForNote(note),\n            type = noteAttachment.find('.mod_board_type').val(),\n            attachmentInfo = noteAttachment.find('.info'),\n            attachmentUrl = noteAttachment.find('.url'),\n            attachmentFile = noteAttachment.find('.mod_board_file');\n\n        if (type > \"0\") {\n            attachmentInfo.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_info']);\n            attachmentUrl.prop('placeholder', strings['option_' + attachmentTypeToString(type) + '_url']);\n\n            attachmentInfo.show();\n            if (type == ATTACHMENT_IMAGE && FileReader) {\n                attachmentFile.show();\n                attachmentUrl.hide();\n            } else {\n                attachmentFile.hide();\n                attachmentUrl.show();\n            }\n        } else {\n            attachmentInfo.hide();\n            attachmentUrl.hide();\n            attachmentFile.hide();\n\n            attachmentInfo.val('');\n            attachmentUrl.val('');\n\n        }\n    };\n\n    /**\n     * Set the attachment of a note.\n     *\n     * @method setAttachment\n     * @param note\n     * @param attachment\n     */\n    var setAttachment = function(note, attachment) {\n        var noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment) {\n            if (!attachment) {\n                attachment = {type: \"0\"};\n            } else {\n                attachment.type += \"\";// Just in case\n            }\n            var attType = noteAttachment.find('.mod_board_type');\n            attType.val(attachment.type ? attachment.type : \"0\");\n            if (attType.val() > \"0\") {\n                noteAttachment.find('.info').val(decodeText(attachment.info));\n                noteAttachment.find('.url').val(decodeText(attachment.url));\n            }\n            attachmentTypeChanged(note, attachment);\n        }\n        previewAttachment(note, attachment);\n    };\n\n    /**\n     * Returns an object with various information about a note's attachment.\n     *\n     * @method attachmentDataForNote\n     * @param note\n     * @returns {{filename: null, filecontents: null, type: number, url: null, info: null}}\n     */\n    var attachmentDataForNote = function(note) {\n        var attachment = {type: 0, info: null, url: null, filename: null, filecontents: null},\n            noteAttachment = getNoteAttachmentsForNote(note);\n        if (noteAttachment.length) {\n            attachment.type = noteAttachment.find('.mod_board_type').val();\n            attachment.info = encodeText(noteAttachment.find('.info').val());\n            attachment.url = encodeText(noteAttachment.find('.url').val());\n            var fileElem = noteAttachment.find('.mod_board_file>input');\n            if (fileElem.data('filename')) {\n                attachment.filename = fileElem.data('filename');\n                attachment.filecontents = fileElem.data('filecontents');\n            }\n        }\n        if ((!attachment.info || !attachment.info.length) && (!attachment.url || !attachment.url.length) &&\n            (!attachment.filename)) {\n            attachment.type = 0;\n        }\n\n        return attachment;\n    };\n\n    /**\n     * Get the string type of a attachment type number.\n     *\n     * @method attachmentTypeToString\n     * @param type\n     * @returns {string|null}\n     */\n    var attachmentTypeToString = function(type) {\n        switch (type) {\n            case \"1\": return 'youtube';\n            case \"2\": return 'image';\n            case \"3\": return 'link';\n            default: return null;\n        }\n    };\n\n    /**\n     * This parses a youtube video ID from a URL. We can use this ID to\n     * construct the embed URL.\n     * @param {string} url The URL entered to the modal.\n     * @returns {string | null} The youtube embed URL or null.\n     */\n    const getEmbedUrl = (url) => {\n        // Thanks for the regex from: https://gist.github.com/rodrigoborgesdeoliveira/987683cfbfcc8d800192da1e73adc486\n        let regex = /(\\/|%3D|v=)([0-9A-z-_]{11})([%#?&]|$)/;\n        let videoID = url.match(regex);\n        if (!videoID || videoID[2] === undefined || videoID[2].length !== 11) {\n            return null;\n        }\n        return `https://youtube.com/embed/${videoID[2]}`;\n    };\n\n    /**\n     * Display the attachment preview for a note.\n     *\n     * @method previewAttachment\n     * @param note\n     * @param attachment\n     */\n    var previewAttachment = function(note, attachment) {\n        var elem = note.find('.mod_board_preview');\n        if (!attachment) {\n            attachment = attachmentDataForNote(note);\n        }\n\n        if (!getNoteTextForNote(note).html().length) {\n            elem.addClass('mod_board_notext');\n        } else {\n            elem.removeClass('mod_board_notext');\n        }\n\n        elem.removeClass('wrapper_youtube');\n        elem.removeClass('wrapper_image');\n        elem.removeClass('wrapper_url');\n        if (attachment.filename && parseInt(attachment.type) == ATTACHMENT_IMAGE) { // Before uploading\n            elem.html(`<img src=\"${attachment.filecontents}\" alt=\"${attachment.info}\"\n                class=\"mod_board_preview_element\"/>`);\n            elem.addClass('wrapper_image');\n            elem.show();\n        } else if (attachment.url) {\n            switch (parseInt(attachment.type)) {\n                case ATTACHMENT_VIDEO: { // Youtube\n                    let url = getEmbedUrl(attachment.url);\n                    if (url === null) {\n                        elem.html(strings.invalid_youtube_url);\n                    } else {\n                        elem.html('<iframe src=\"' + url +\n                            '\" class=\"mod_board_preview_element\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write;' +\n                            'encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>');\n                        elem.addClass('wrapper_youtube');\n                    }\n                    elem.show();\n                }\n                break;\n                case ATTACHMENT_IMAGE: // Image\n                    elem.html(`<img src=\"${attachment.url}\" alt=\"${attachment.info}\"\n                        class=\"mod_board_preview_element\"/>`);\n                    elem.addClass('wrapper_image');\n                    elem.show();\n                break;\n                case ATTACHMENT_LINK: // Url\n                    elem.html('<a href=\"' + attachment.url + '\" class=\"mod_board_preview_element\" target=\"_blank\">' +\n                             (attachment.info || attachment.url) + '</a>');\n                    elem.addClass('wrapper_url');\n                    elem.show();\n                break;\n                default:\n                    elem.html('');\n                    elem.hide();\n            }\n        } else {\n            elem.html('');\n            elem.hide();\n        }\n    };\n\n    /**\n     * Add a new note with the given information.\n     *\n     * @method addNote\n     * @param columnid\n     * @param ident\n     * @param heading\n     * @param content\n     * @param attachment\n     * @param owner\n     * @param sortorder\n     * @param rating\n     */\n    var addNote = function(columnid, ident, heading, content, attachment, owner, sortorder, rating) {\n        var ismynote = owner.id == userId || !ident;\n        var iseditable = isEditor || (ismynote && !isReadOnlyBoard);\n\n        if (!ident) {\n            var pendingNote = getNote(0);\n            if (pendingNote) {\n                pendingNote.remove();\n            }\n        }\n\n        var note = $('<div class=\"board_note\" data-column=\"' + columnid + '\" data-ident=\"' + ident +\n            '\" data-sortorder=\"' + sortorder + '\"></div>');\n        if (ismynote) {\n            note.addClass('mod_board_mynote');\n        }\n        if (iseditable) {\n            note.addClass('mod_board_editablenote');\n        }\n\n        var notecontent = $('<div class=\"mod_board_note_content\"></div>'),\n            noteHeading = $('<div class=\"mod_board_note_heading\" tabindex=\"0\">' + (heading ? heading : '') + '</div>'),\n            noteBorder = $('<div class=\"mod_board_note_border\"></div>'),\n            noteText = $('<div class=\"mod_board_note_text\" tabindex=\"0\">' + (content ? content : '') + '</div>'),\n            noteAriaText = $('<div class=\"note_ariatext hidden\" role=\"heading\" aria-level=\"4\" tabindex=\"0\"></div>'),\n            attachmentPreview = $('<div class=\"mod_board_preview\"></div>');\n\n        notecontent.append(noteHeading);\n        notecontent.append(noteBorder);\n        notecontent.append(noteText);\n        notecontent.append(noteAriaText);\n\n        notecontent.append(attachmentPreview);\n        note.append(notecontent);\n\n        var columnContent = $('.board_column[data-ident=' + columnid + '] .board_column_content');\n\n        var beginEdit = () => {\n            startNoteEdit(ident);\n        };\n\n        if (ident) {\n            if (ratingenabled) {\n                note.addClass('mod_board_rateablenote');\n                var rateElement = $(`<div class=\"fa fa-star mod_board_rating\" role=\"button\" tabindex=\"0\"> ${rating} </div>`);\n\n                handleAction(rateElement, () => {\n                    rateNote(ident);\n                });\n                notecontent.append(rateElement);\n            }\n\n            if (iseditable) {\n                var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_note\" role=\"button\" tabindex=\"0\"></div>');\n                handleAction(removeElement, () => {\n                    deleteNote(ident);\n                });\n\n                notecontent.append(removeElement);\n\n                handleEditableAction(noteText, beginEdit);\n                handleEditableAction(noteHeading, beginEdit);\n                handleEditableAction(noteBorder, beginEdit);\n\n                setAttachment(note, attachment);\n            } else {\n                previewAttachment(note, attachment);\n            }\n\n            if (!noteHeading.html()) {\n                noteHeading.hide();\n                noteBorder.hide();\n            }\n            if (!noteText.html() && noteHeading.html()) {\n                noteText.hide();\n                noteBorder.hide();\n            }\n\n            var lastOne = columnContent.find(\".board_note\").last();\n\n            if (lastOne.length) {\n                note.insertAfter(lastOne);\n            } else {\n                columnContent.prepend(note);\n            }\n        } else {\n            $('.board_column[data-ident=' + columnid + '] .board_column_newcontent').append(note);\n            // This is effectively a note placeholder. So we don't need to show it.\n            note.hide();\n            beginEdit();\n        }\n    };\n\n    /**\n     * Add a new column.\n     *\n     * @method addColumn\n     * @param ident\n     * @param name\n     * @param notes\n     */\n    var addColumn = function (ident, name, notes, colour) {\n        let headerStyle = `style=\"border-top: 10px solid #${colour}\"`;\n        var iseditable = isEditor,\n            nameCache = null,\n            column = $(`<div class=\"board_column board_column_hasdata\" ${headerStyle} data-ident=\"${ident}\"></div>`),\n            columnHeader = $('<div class=\"board_column_header\"></div>'),\n            columnSort = $('<div class=\"mod_board_column_sort fa\"></div>'),\n            columnName = $('<div class=\"mod_board_column_name\" tabindex=\"0\" aria-level=\"3\" role=\"heading\">' + name + '</div>'),\n            columnContent = $('<div class=\"board_column_content\"></div>'),\n            columnNewContent = $('<div class=\"board_column_newcontent\"></div>');\n        columnHeader.append(columnSort);\n        columnHeader.append(columnName);\n\n        if (options.hideheaders) {\n            columnName.addClass('d-none');\n        }\n\n        columnSort.on('click', function() {\n            sortNotes(columnContent, true);\n        });\n\n        if (iseditable) {\n            column.addClass('mod_board_editablecolumn');\n\n            var removeElement = $('<div class=\"mod_board_remove fa fa-remove delete_column\" role=\"button\" tabindex=\"0\"></div>');\n            handleAction(removeElement, function() {\n                Notification.confirm(\n                    strings.remove_column_title, // Are you sure?\n                    strings.remove_column_text, // This will effect others.\n                    strings.Ok,\n                    strings.Cancel,\n                    function() {\n                        serviceCall('delete_column', {id: ident}, function(result) {\n                            if (result.status) {\n                                column.remove();\n                                lastHistoryId = result.historyid;\n                            }\n                        });\n                    }\n                );\n            });\n\n            columnHeader.append(removeElement);\n        }\n\n        column.append(columnHeader);\n        column.append(columnContent);\n        column.append(columnNewContent);\n\n        if (iseditable) {\n            handleEditableAction(columnName, function() {\n                nameCache = columnName.html();\n            }, true);\n\n            columnName.editable({\n                toggleFontSize: false,\n                closeOnEnter: true,\n                callback: function(data) {\n                    if (data.content) {\n                        serviceCall('update_column', {id: ident, name: columnName.html()}, function(result) {\n                            if (!result.status) {\n                                columnName.html(nameCache);\n                                nameCache = null;\n                            } else {\n                                lastHistoryId = result.historyid;\n                                updateColumnAria(ident);\n                            }\n                        }, function() {\n                            columnName.html(nameCache);\n                            nameCache = null;\n                        });\n                    } else {\n                        columnName.html(nameCache);\n                        nameCache = null;\n                    }\n                }\n            });\n        }\n\n        if (!isReadOnlyBoard) {\n            columnNewContent.append('<div class=\"board_button newnote\" role=\"button\" tabindex=\"0\">' +\n            '<div class=\"button_content\"><span class=\"fa ' + options.noteicon + '\"></span></div></div>');\n\n            handleAction(columnNewContent.find('.newnote'), function() {\n                addNote(ident, 0, null, null, null, {id: userId}, 0, 0);\n            });\n        }\n\n        var lastOne = $(\".mod_board .board_column_hasdata\").last();\n        if (lastOne.length) {\n            column.insertAfter(lastOne);\n        } else {\n            $(\".mod_board\").append(column);\n        }\n\n        if (notes) {\n            for (var index in notes) {\n                addNote(ident, notes[index].id, notes[index].heading, notes[index].content,\n                    {type: notes[index].type, info: notes[index].info, url: notes[index].url},\n                    {id: notes[index].userid}, notes[index].timecreated, notes[index].rating);\n            }\n        }\n        sortNotes(columnContent);\n        updateColumnAria(ident);\n        if (isEditor) {\n            updateSortable();\n        }\n    };\n\n    /**\n     * Add the new column button.\n     *\n     * @method addNewColumnButton\n     */\n    var addNewColumnButton = function() {\n        var column = $('<div class=\"board_column board_column_empty\"></div>'),\n            newBusy = false;\n        column.append('<div class=\"board_button newcolumn\" role=\"button\" tabindex=\"0\" aria-label=\"' +\n            strings.aria_newcolumn + '\" title=\"' + strings.aria_newcolumn + '\"><div class=\"button_content\"><span class=\"fa '\n            + options.columnicon + '\"></span></div></div>');\n\n        handleAction(column.find('.newcolumn'), function() {\n            if (newBusy) {\n                return;\n            }\n            newBusy = true;\n\n            serviceCall('add_column', {boardid: board.id, name: strings.default_column_heading}, function(result) {\n                addColumn(result.id, strings.default_column_heading, {}, selectHeadingColour());\n                lastHistoryId = result.historyid;\n                newBusy = false;\n            }, function() {\n                newBusy = false;\n            });\n        });\n\n        $(\".mod_board\").append(column);\n    };\n\n    /**\n     * This selects the next heading colour from options based on the count of the\n     * current columns. Length of decremented by one as the new column button is\n     * also denoted as a column.\n     * @returns {string} colour hex string.\n     */\n    const selectHeadingColour = () => {\n        let colCount = $('.board_column').length - 1;\n        let colourCount = options.colours.length;\n        return options.colours[colCount % colourCount];\n    };\n\n    /**\n     * Update a note with the provided information.\n     *\n     * @method updateNote\n     * @param note\n     * @param heading\n     * @param data\n     */\n    var updateNote = function(note, heading, data) {\n        var noteHeading = getNoteHeadingForNote(note);\n        var noteText = getNoteTextForNote(note);\n        var noteBorder = getNoteBorderForNote(note);\n\n        noteText.html(data.content);\n        noteHeading.html(data.heading);\n        setAttachment(note, data.attachment);\n        updateNoteAria(data.id);\n\n        // Reset the visibility state.\n        noteHeading.show();\n        noteBorder.show();\n        noteText.show();\n        if (!noteHeading.html()) {\n            noteHeading.hide();\n            noteBorder.hide();\n        }\n        if (!noteText.html() && noteHeading.html()) {\n            noteText.hide();\n            noteBorder.hide();\n        }\n    };\n\n    /**\n     * Fetch and process the recent board history.\n     *\n     * @method processBoardHistory\n     */\n    var processBoardHistory = function() {\n        serviceCall('board_history', {id: board.id, since: lastHistoryId}, function(boardhistory) {\n            for (var index in boardhistory) {\n                var item = boardhistory[index];\n                if (item.boardid != board.id) {\n                    continue; // Hmm\n                }\n\n                var data = JSON.parse(item.content);\n                if (item.action == 'add_note') {\n                    addNote(data.columnid, data.id, data.heading, data.content, data.attachment,\n                        {id: item.userid}, data.timecreated, data.rating);\n                    updateNoteAria(data.id);\n                    sortNotes($('.board_column[data-ident=' + data.columnid + '] .board_column_content'));\n                } else if (item.action == 'update_note') {\n                    let note = getNote(data.id),\n                        formModal = editModal,\n                        historyData = data;\n                    if (note) {\n                        let noteHeading = getNoteHeadingForNote(note);\n\n                        if (editingNote == data.id) {\n                            Notification.confirm(\n                                strings.note_changed_title,\n                                strings.note_changed_text,\n                                strings.Ok,\n                                strings.Cancel,\n                                function() {\n                                    formModal.hide();\n                                    updateNote(note, noteHeading, historyData);\n                                    stopNoteEdit();\n                                }\n                            );\n                        } else {\n                            updateNote(note, noteHeading, data);\n                        }\n                    }\n                } else if (item.action == 'delete_note') {\n                    if (editingNote == data.id) {\n                        Notification.alert(strings.warning, strings.note_deleted_text);\n                        stopNoteEdit();\n                    }\n                    getNote(data.id).remove();\n\n                } else if (item.action == 'add_column') {\n                    addColumn(data.id, data.name, {}, selectHeadingColour());\n                } else if (item.action == 'update_column') {\n                    $(\".board_column[data-ident='\" + data.id + \"'] .mod_board_column_name\").html(data.name);\n                    updateColumnAria(data.id);\n                } else if (item.action == 'delete_column') {\n                    var column = $(\".board_column[data-ident='\" + data.id + \"']\");\n                    if (editingNote && column.find('.board_note[data-ident=\"' + editingNote + '\"]').length) {\n                        stopNoteEdit();\n                    }\n                    column.remove();\n                } else if (item.action == 'rate_note') {\n                    var note = getNote(data.id);\n                    note.find('.mod_board_rating').html(data.rating);\n                    if (sortby == SORTBY_RATING) {\n                        sortNotes(note.closest('.board_column_content'));\n                    }\n                }\n                lastHistoryId = item.id;\n            }\n\n            updateBoard();\n        });\n    };\n\n    /**\n     * Trigger a board update.\n     *\n     * @method updateBoard\n     * @param instant\n     */\n    var updateBoard = function(instant) {\n        if (instant) {\n            processBoardHistory();\n        } else if (options.history_refresh > 0) {\n            if (reloadTimer) {\n                stopUpdating();\n            }\n            reloadTimer = setTimeout(processBoardHistory, options.history_refresh * 1000);\n        }\n    };\n\n    /**\n     * Stop/prevent the board reload timer from firing.\n     *\n     * @method stopUpdating\n     */\n    var stopUpdating = function() {\n        clearTimeout(reloadTimer);\n        reloadTimer = null;\n    };\n\n    /**\n     * Sort a set of notes.\n     *\n     * @sortNotes\n     * @param content\n     * @param toggle\n     */\n    var sortNotes = function(content, toggle) {\n        var sortCol = $(content).parent().find('.mod_board_column_sort'),\n            direction = $(content).data('sort');\n        if (!direction) {\n            if (sortby == SORTBY_RATING) {\n                direction = 'desc';\n            } else {\n                direction = 'asc';\n            }\n        }\n        if (toggle) {\n            direction = direction == 'asc' ? 'desc' : 'asc';\n        }\n\n        if (direction == 'asc') {\n            sortCol.removeClass('fa-angle-down');\n            sortCol.addClass('fa-angle-up');\n        } else {\n            sortCol.removeClass('fa-angle-up');\n            sortCol.addClass('fa-angle-down');\n        }\n        $(content).data('sort', direction);\n\n        var desc,\n            asc;\n        if (sortby == SORTBY_DATE) {\n            desc = function(a, b) {\n                return $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        } else {\n            desc = function(a, b) {\n                return $(b).find('.mod_board_rating').text() - $(a).find('.mod_board_rating').text() ||\n                $(b).data(\"sortorder\") - $(a).data(\"sortorder\");\n            };\n            asc = function(a, b) {\n                return $(a).find('.mod_board_rating').text() - $(b).find('.mod_board_rating').text() ||\n                $(a).data(\"sortorder\") - $(b).data(\"sortorder\");\n            };\n        }\n\n        $('> .board_note', $(content)).sort(direction === 'asc' ? asc : desc).appendTo($(content));\n\n    };\n\n    /**\n     * Update sorting of sortable content.\n     *\n     * @method updateSortable\n     */\n    var updateSortable = function() {\n        $(\".board_column_content\").sortable({\n            connectWith: \".board_column_content\",\n            stop: function(e, ui) {\n                var note = $(ui.item),\n                    tocolumn = note.closest('.board_column'),\n                    columnid = tocolumn.data('ident'),\n                    elem = $(this);\n\n                serviceCall('move_note', {id: note.data('ident'), columnid: columnid}, function(result) {\n                    if (result.status) {\n                        lastHistoryId = result.historyid;\n                        updateNoteAria(note.data('ident'));\n                        sortNotes($('.board_column[data-ident=' + columnid + '] .board_column_content'));\n                    } else {\n                        elem.sortable('cancel');\n                    }\n                });\n            }\n        });\n    };\n\n    /**\n     * Get the body fragment for the modal form.\n     *\n     * @param noteid\n     * @param columnid\n     * @returns {Deferred|*}\n     */\n    var getBody = function(noteid, columnid) {\n        // Get the content of the modal.\n        var params = {noteid: noteid, columnid: columnid};\n        return Fragment.loadFragment('mod_board', 'note_form', contextid, params);\n    };\n\n    /**\n     * Setup the aria labels for the modal.\n     *\n     * @param note\n     * @param modal\n     */\n    var updateModalAria = function(note, modal) {\n        let columnIdentifier = note.closest('.board_column').find('.mod_board_column_name').text(),\n            addYoutube,\n            addImage,\n            addLink,\n            postButton,\n            cancelButton,\n            modalRoot = modal.getRoot();\n\n        if (note.data('ident')) {\n            // Is a note update.\n            var noteIdentifier = textIdentifierForNote(note);\n\n            postButton = strings.aria_postedit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            cancelButton = strings.aria_canceledit.replace('{column}', columnIdentifier).replace('{post}', noteIdentifier);\n            addYoutube = strings.aria_addmedia.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addImage = strings.aria_addmedia.replace('{type}', strings.option_image).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n            addLink = strings.aria_addmedia.replace('{type}', strings.option_link).replace('{column}',\n                columnIdentifier).replace('{post}', noteIdentifier);\n        } else {\n            // Note is new.\n            postButton = strings.aria_postnew.replace('{column}', columnIdentifier);\n            cancelButton = strings.aria_cancelnew.replace('{column}', columnIdentifier);\n            addYoutube = strings.aria_addmedianew.replace('{type}', strings.option_youtube).replace('{column}',\n                columnIdentifier);\n            addImage = strings.aria_addmedianew.replace('{type}', strings.option_image).replace('{column}', columnIdentifier);\n            addLink = strings.aria_addmedianew.replace('{type}', strings.option_link).replace('{column}', columnIdentifier);\n        }\n\n        if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('aria-label', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.youtube_button').attr('title', addYoutube);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('aria-label', addImage);\n            modalRoot.find('.mod_board_attachment_button.image_button').attr('title', addImage);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('aria-label', addLink);\n            modalRoot.find('.mod_board_attachment_button.link_button').attr('title', addLink);\n        }\n\n        let button = modalRoot.find(modal.getActionSelector('save'));\n        if (button) {\n            button.attr('aria-label', postButton);\n        }\n        button = modalRoot.find(modal.getActionSelector('cancel'));\n        if (button) {\n            button.attr('aria-label', cancelButton);\n        }\n    };\n\n    /**\n     * Displays the modal form to edit a note.\n     *\n     * @param note\n     */\n    var showModalForm = function(note) {\n        let noteId = 0,\n            columnId = note.data('column'),\n            column = $('.board_column[data-ident=' + columnId + ']'),\n            columnIdentifier = column.find('.mod_board_column_name').text(),\n            title;\n\n        if (note.data('ident')) {\n            noteId = note.data('ident');\n            title = strings.modal_title_edit.replace('{column}', columnIdentifier);\n        } else {\n            title = strings.modal_title_new.replace('{column}', columnIdentifier);\n        }\n\n        ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: title,\n            body: getBody(noteId, columnId),\n            large: true,\n            removeOnClose: true\n        }).then(function(modal) {\n            // Use the body promise so we know body content is loaded.\n            modal.getBodyPromise().then(function () {\n                let saveInProgress = false;\n                editModal = modal;\n                modal.setLarge();\n                modal.setSaveButtonText(strings.post_button_text);\n                modal.setButtonText('cancel', strings.cancel_button_text);\n\n                modal.getRoot().on(ModalEvents.hidden, function () {\n                    stopNoteEdit();\n                    if (!note.data('ident')) {\n                        note.remove();\n                    }\n                });\n\n                modal.getRoot().on(ModalEvents.save, function (e) {\n                    e.preventDefault();\n                    modal.getRoot().find('form').submit();\n                });\n\n                var changeEvent = document.createEvent('HTMLEvents');\n                changeEvent.initEvent('change', true, true);\n\n                modal.getRoot().on('submit', 'form', function (e) {\n                    e.preventDefault();\n\n                    // Prevent multiple form submissions from being sent.\n                    if (saveInProgress) {\n                        return;\n                    }\n                    saveInProgress = true;\n\n                    // First, make sure the native html5 validity checks are run.\n                    let valid = modal.getRoot().find('form').get(0).reportValidity();\n                    if (!valid) {\n                        return;\n                    }\n\n                    // Prompt all inputs to run their validation functions.\n                    // Normally this would happen when the form is submitted, but\n                    // since we aren't submitting the form normally we need to run client side\n                    // validation.\n                    modal.getRoot().find(':input').each(function (index, element) {\n                        element.dispatchEvent(changeEvent);\n                    });\n\n                    // Now the change events have run, see if there are any \"invalid\" form fields.\n                    var invalid = $.merge(\n                        modal.getRoot().find('[aria-invalid=\"true\"]'),\n                        modal.getRoot().find('.error'),\n                        modal.getRoot().find(':invalid')\n                    );\n\n                    // If we found invalid fields, focus on the first one and do not submit via ajax.\n                    if (invalid.length) {\n                        invalid.first().focus();\n                        return;\n                    }\n\n                    var formData = JSON.stringify(modal.getRoot().find('form').serialize());\n                    serviceCall('submit_form', {contextid: contextid, jsonformdata: formData}, function (result) {\n                        if (result.status) {\n                            if (result.action == 'insert') {\n                                // Added a new note.\n                                lastHistoryId = result.historyid;\n                                note.remove();\n                                addNote(columnId, result.note.id, result.note.heading, result.note.content,\n                                    {type: result.note.type, info: result.note.info, url: result.note.url},\n                                    {id: result.note.userid}, result.note.timecreated, result.note.rating);\n                                sortNotes($('.board_column[data-ident=' + columnId + '] .board_column_content'));\n                                updateNoteAria(result.note.id);\n                            } else {\n                                // Updated existing note.\n                                lastHistoryId = result.historyid;\n                                getNoteTextForNote(note).html(result.note.content);\n                                getNoteHeadingForNote(note).html(result.note.heading);\n                                updateNoteAria(result.note.id);\n                                setAttachment(note, {\n                                    type: result.note.type,\n                                    info: result.note.info, url: result.note.url\n                                });\n                            }\n                            stopNoteEdit();\n\n                            // Clear the form changed checker.\n                            Y.use('moodle-core-formchangechecker', function() {\n                                M.core_formchangechecker.reset_form_dirty_state();\n                            });\n\n                            modal.destroy();\n                        } else {\n                            // TODO show error.\n                        }\n                    });\n\n                });\n\n                if (mediaSelection == MEDIA_SELECTION_BUTTONS) {\n                    // First hide the select menu.\n                    modal.getRoot().find('#fitem_id_mediatype').hide();\n\n                    let mediaSelect = modal.getRoot().find('#fitem_id_mediatype select'),\n                        ytButton = modal.getRoot().find('.mod_board_attachment_button.youtube_button'),\n                        pictureButton = modal.getRoot().find('.mod_board_attachment_button.image_button'),\n                        linkButton = modal.getRoot().find('.mod_board_attachment_button.link_button'),\n                        updateMediaButtons = function() {\n                            ytButton.removeClass('selected');\n                            pictureButton.removeClass('selected');\n                            linkButton.removeClass('selected');\n                            switch (mediaSelect.val()) {\n                                case (\"1\"):\n                                    ytButton.addClass('selected');\n                                    break;\n                                case (\"2\"):\n                                    pictureButton.addClass('selected');\n                                    break;\n                                case (\"3\"):\n                                    linkButton.addClass('selected');\n                                    break;\n                            }\n                        };\n\n                    updateMediaButtons();\n                    handleAction(ytButton, function() {\n                        if (mediaSelect.val() === \"1\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(1);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(pictureButton, function() {\n                        if (mediaSelect.val() === \"2\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(2);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                    handleAction(linkButton, function() {\n                        if (mediaSelect.val() === \"3\") {\n                            mediaSelect.val(0);\n                        } else {\n                            mediaSelect.val(3);\n                        }\n                        updateMediaButtons();\n                        mediaSelect[0].dispatchEvent(changeEvent);\n                    });\n                } else {\n                    modal.getRoot().find('#fitem_id_mediabuttons').hide();\n                }\n\n                updateModalAria(note, modal);\n                modal.show();\n\n                return modal;\n            });\n            return modal;\n        });\n    };\n\n    /**\n     * Initialize board.\n     *\n     * @method init\n     */\n    var init = function() {\n        serviceCall('get_board', {id: board.id}, function(columns) {\n            // Init\n            if (columns) {\n                for (var index in columns) {\n                    addColumn(\n                        columns[index].id,\n                        columns[index].name,\n                        columns[index].notes || {},\n                        options.colours[index % options.colours.length]\n                    );\n                }\n            }\n\n            if (isEditor) {\n                addNewColumnButton();\n            }\n\n            lastHistoryId = board.historyid;\n\n            if (isEditor) {\n                updateSortable();\n            }\n\n            updateBoard();\n        });\n    };\n\n    // Get strings\n    var stringsInfo = [];\n    for (var string in strings) {\n        stringsInfo.push({key: string, component: 'mod_board'});\n    }\n\n    $.when(getStrings(stringsInfo)).done(function(results) {\n        var index = 0;\n        for (string in strings) {\n            strings[string] = results[index++];\n        }\n\n        init();\n    });\n}\n"],"file":"board.min.js"}